# This job will execute the changeset_testlist.py script, which in turn will
# compute a list of tests that need to be executed.
# The script itself produces the correct output to set a variable for a future
# stage.

parameters:
- name: reference_pipeline_name
  type: string
- name: add_tests
  type: string
  default: "none"
- name: remove_tests
  type: string
  default: "none"
- name: skip_rule_checking
  type: boolean
  default: False

jobs:
  - job: analyze
    displayName: Analyze Changeset
    variables:
      - ${{ if not(parameters.skip_rule_checking) }}:
        - group: github-ettusresearch-uhddev
    pool:
      name: Drivers-NIBuildFarm-RFMIBUILD
      demands: sh
    steps:
    - ${{ if parameters.skip_rule_checking }}:
      - checkout: none
      - bash : |
          echo "Task List = $ADD_TESTS"
          echo "##vso[task.setvariable variable=UhdTestList;isoutput=true]$ADD_TESTS"
        name: gen_testlist
        displayName: Set Test-List Variable
        env:
          ADD_TESTS: ${{ parameters.add_tests }}
    - ${{ else }}:
      # Use checkout depth of large number in order to transfer history of merge commit only.
      - checkout: self
        clean: true
        fetchDepth: 1000000000
        fetchTags: false
      - bash: |
          python3 -m venv $AGENT_TEMPDIRECTORY/ac_venv
          source $AGENT_TEMPDIRECTORY/ac_venv/bin/activate
          pip install --upgrade pip
          pip install ruamel.yaml clang-format==14.0.6 ni-python-styleguide requests
        displayName: setup venv
      - bash: |
          source $AGENT_TEMPDIRECTORY/ac_venv/bin/activate
          git branch
          set -e
          set -o xtrace
          if [ "$BUILD_REASON" == "PullRequest" ]; then
            EXTRA_ARGS="--github-label-api-endpoint https://oauth2:$OAUTH_TOKEN@api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels"
            EXTRA_ARGS="$EXTRA_ARGS --source-branch $SYSTEM_PULLREQUEST_SOURCECOMMITID"
          fi
          if [ -n "$ADD_TESTS" ] && [ "$ADD_TESTS" != "none" ]; then
            EXTRA_ARGS="$EXTRA_ARGS --add-test $ADD_TESTS"
          fi
          if [ -n "$REMOVE_TESTS" ] && [ "$REMOVE_TESTS" != "none" ]; then
            EXTRA_ARGS="$EXTRA_ARGS --remove-test $REMOVE_TESTS"
          fi
          echo "Using pipeline $PIPELINE_PIPELINE_NAME / $PIPELINE_RUN_NAME as reference (branch $PIPELINE_SOURCE_BRANCH, commit $PIPELINE_SOURCE_COMMIT)"
          python3 tools/changeset_testlist.py \
                  --target-branch $PIPELINE_SOURCE_COMMIT \
                  --set-azdo-var UhdTestList \
                  --list-tests --verbose $EXTRA_ARGS
        name: gen_testlist
        displayName: Generate Test-List
        env:
          OAUTH_TOKEN: $(github_uhddev_token)
          PIPELINE_SOURCE_BRANCH: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.sourceBranch)
          PIPELINE_SOURCE_COMMIT: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.sourceCommit)
          PIPELINE_PIPELINE_NAME: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.pipelineName)
          PIPELINE_RUN_NAME: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.runName)
          ADD_TESTS: ${{ parameters.add_tests }}
          REMOVE_TESTS: ${{ parameters.remove_tests }}

    - bash: |
        if [[ $AGENT_OS == "Windows_NT" ]]; then
            VENV_BIN_DIR="Scripts"
        else
            VENV_BIN_DIR="bin"
        fi
        source $AGENT_TEMPDIRECTORY/ac_venv/$VENV_BIN_DIR/activate
        if [[ $GEN_TESTLIST_UHDTESTLIST =~ "clang-format" ]]; then
            $AGENT_TEMPDIRECTORY/ac_venv/$VENV_BIN_DIR/python3 \
                tools/run-clang-format.py . -r --patch-file clang-format.patch \
                    --clang-format-executable `which clang-format`
        fi
      name: run_clang_format
      displayName: Conditionally run clang-format

    - publish: clang-format.patch
      artifact: clang-format patch file
      displayName: Publish clang-format patch file
      condition: failed()

