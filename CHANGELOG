Change Log for Releases
==============================

## 004.005.000.000
* b200
  - Fix invalid RF switch positions
* ci
  - add attempt number to uhd build artifact name on failure
  - Add conditions for embedded builds, HW tests
  - add pytest args option to test dev pipeline
  - add step for x440 embedded runs
  - Allow internal fileserver usage for MS installer builds
  - Auto-detect conditionals for pipeline stages
  - Default to internal fileserver for FPGA images
  - Disable PR runs for draft PRs
  - Enable X440
  - Fix swallowed return codes in CI script steps
  - Fix the chocolately version to use
  - fixup typo in x440 sdr-test0 template
  - increase build timeouts to 90 minutes
  - increase win docker image build timeout
  - modify default sfp0 and reboot
  - Remove Fedora 35 and add Fedora 37
  - restrict analyze changeset pool
  - select docker image repo directly at container endpoint definitions
  - select docker registry based on branch
  - splitup x410 test stage in hardware test dev pipeline
  - Update CLA Assistant to v2.3.0
  - update docker builds to run twice a week
  - update docker service connection
  - update to build docker builds for all release branches
  - updates for new E320 in devtest system
* clang
  - Apply clang-formatting to all C/C++ files
  - Modify files for treatment with clang-format
  - Update clang-format for version 14
* cmake
  - Fix auto-detection of Python install directory
  - Fix linking DPDK when installed at non-standard location
* cpld
  - Adapt CPLD updater for future X4x0 dboards
* debian
  - Fix copyright dates in changelog
* devtest
  - add exemptions for x440 python API test
  - correct docstrings with example being run
  - disable rx_samples_to_file_test for x440
  - fix typo in error message
  - gpio test updates
  - remove API calls that now error
  - remove benchmark_rate test for x440
* docs
  - Add page on timed commands
  - add python package requirement for usrpctl MPM reset
  - add updated msgpack rpc package
  - b200: Improve docs (auto MCR, GPIOs)
  - Document throttle stream arg
  - Fix argument for uhd_image_loader in E3xx docs
  - Fix docstring for get_block_chain()
  - fix typo and consistency in usrpctl docs
  - Improve documentation on timekeepers
  - Make X410 dboard a subpage of the X4xx page
  - rfnoc: Document RFNoC overrun handling algorithm
  - Update clocking theory of operations for X4xx
  - update docs for reset command
  - update FPGA build docs
  - update remote streaming supported version
  - Update X4x0 manual
  - Update X4xx manual wrt. self-cal
  - x410: Document UC_200 image flavor
  - x440: Added FBX to UM daughterboards page
  - x440: Extend X4x0 Usage Manual for x440
  - x440: Fixed incorrect use of paragraph elements
* examples
  - Add power controls to rx_ascii_art_dft.cpp
  - Add throttle to replay_capture.py
  - Amend tx_waveforms.py to use DramTransmitter
  - Fix play region in replay_capture.py
  - Remove default --ref and --pps values
  - rx_samples_to_file: multi_streamer option
* experts
  - Add force_dirty() call
* extension
  - windows: Fixed linking extension example to uhd.lib
* fpga
  - Add BUILD_BASE_DIR option to makefiles
  - Add BUILD_SEED variable
  - Add time changed pulse to timekeeper
  - Add X440/FBX support
  - ci: Add MAX_CPU to pool demands
  - ci: Add X410_UC_200 to default bitfiles
  - ci: Add X410_UC_200 to release pipeline
  - ci: Enable publishing to internal server
  - ci: Fix branches
  - ci: Include modified manifest in artifacts
  - ci: Support parallel jobs for IP builds
  - ci: Use different seed for each job attempt
  - ci: Use repeat_fpga_build for pipeline builds
  - Clear clang-format settings for FPGA code
  - docs: Add system memory recommendations
  - docs: Clarify design tool requirements
  - Fix RFNoC OOT Makefile inclusion
  - lib: Add axis_pkt_throttle.sv
  - lib: Add clock_div module
  - lib: Add ctrl_port_to_wb_i2c module
  - lib: Fix IPv4 CHDR TUSER width
  - lib: Fix Vivado warnings
  - lib: rfnoc: Add resize capability to chdr_stream_endpoint
  - lib: rfnoc: Make RFNoC packet gates removable
  - lib: rfnoc: Remove redundant packet gate
  - lib: rfnoc: Support multiple port widths on crossbar
  - Reformat javascript in doc
  - rfnoc: Add DEVICE_FAMILY to stream endpoint
  - rfnoc: Add throttle to stream endpoints
  - rfnoc: Add ULTRASCALE to chdr_ingress_fifo
  - Synchronize X300 RX frontends on time change
  - tools: Add repeat_fpga_build.py
  - tools: Add X410_UC_200 image to X410 package
  - Update all RFNoC image core files
  - Update RFNoC YAML copyright
  - x400: Add 1x64, 2x64, and 1x128 DRAM interconnect
  - x400: Add CG_200 RFNoC image cores
  - x400: Add ifdef to remove QSFP wrappers when unused
  - x400: Add support for X4C, C1, and UC variants
  - x400: Add X440 to default make targets
  - x400: Add X4C_200 RFNoC image cores
  - x400: Fix DB1 timekeeper strobe
  - x400: Fix PRC divider register map
  - x400: Fix SPI trigger clock crossing
  - x400: Make transport adapter width configurable
  - x400: Remove CPU_W parameter
  - x400: Set QSFP LEDs on startup
  - x400: sim: Add 10 GbE with wide CHDR
  - x400: Use x410_200 image core for x410_100 images
  - x440: fbx: clean up I2C triggers
  - x4xx: Refactor MB CPLD code for future devices
  - x4xx: Rename x410 -> x4xx for common DTS files
* github
  - Fix URL for mailing list
* host
  - Add cstdint include to fix gcc-13 compile.
  - Add in OpenBSD support to uhd::path_expandvars
  - Bump minimum gcc version to 7.3.0
  - doc: Add documentation for tertiary, quaternary QSFP adapter
  - fix & improve EAL args for DPDK v21.11
  - fix build with DPDK v22.11 LTS
  - improve DPDK frame_size error message
  - docs: Fix link to MSVC Redistributable Package
  - python: Update last_gain at end of run_rx_cal loop
* images
  - Add X410_UC_200 to manifest
  - add X440 dependencies to manifest
  - bump x4xx fpga images
  - bump x4xx fpga images
  - update FPGA images for E3xx, X3xx, N3xx
  - Update manifest for SEP throttling
  - Update X410 manifest
* lib
  - Add default virtual dtor to filter_node
  - Add X440/FBX support
  - fbx: Remove unused lambda captures
  - Fix time-cast for dboard_iface::sleep()
  - Mark select x400_dboard_iface methods as const
  - Mark selected x400_dboard_iface child methods final
  - max287x: Remove unused class attributes
  - mb_controller: Minor fixes to logging, formatting
  - rfnoc: Fix linter issue regarding virtual dtor
  - rfnoc: Fix logic in can_connect_device_to_device()
  - rfnoc: Use device cache for rfnoc_graph::make()
  - tests: Mark mock pop_host_tasks() as override
  - mpm: Add MPM synchronization API
* mpm
  - Add ability to query enabled state of ADC/DAC blocks
  - Add dboard_info to db_iface initialization
  - Add LogRuntimeError class
  - Add revE support to zbx_update_cpld
  - Add support for X440/FBX
  - allow for mpm device to tell host to reboot mpm
  - bist: Improve --help message
  - Bump compat number to 5.0
  - dboard_iface: Remove {set/get}_if_freq() APIs
  - dboard_manager: Fix linter issues in dboard_manager/base.py
  - Demote sync_tiles() error to warning
  - Disable PRC to DB if not required
  - e3xx: Fix inheritance order for DB classes
  - enable Xilinx API for PLL config
  - fix get_product_id in x4xx BIST
  - fix GPS lock sensor method name
  - Fix test utilities
  - Fix ZBX CPLD updater
  - lmk04832: Move general APIs to base class
  - Move get_dboard_class_from_pid()
  - move pop_host_tasks to PeriphManagerBase
  - mpmutils: Add parse_multi_device_arg() function
  - mpmutils: Fix Pylint warning
  - Normalize name for gps_locked sensor
  - periph_manager: Remove vestigial Python-six
  - Refactor LMK04832X4xx and LMK03328X4xx
  - rfdc_ctrl: Change latency argument to signed
  - rfdc: Enhance converter checks
  - rfdc: Remove set_sample_rate() API call
  - Simplify x4xx_bist nsync_fabric
  - Update X440 clock policy
  - Updated default MCR for X440
  - utils: Add LogWrapper
  - x440: Move clock info logging out of policy
  - x4xx: Add additional args parsing in init()
  - x4xx: Add intermediate clock settings to clock policy
  - x4xx: add intermediate clocking setting
  - x4xx: Add logging for metal and rfdc versions
  - x4xx: Add master_clock_rates argument to _set_ref_clock_freq()
  - x4xx: add multiple latency detect iterations
  - x4xx: Add rfdc rate as a sensor to X4xx dboards
  - x4xx: Add UC FPGA type
  - X4xx: Change reset strategy to cover all X4xx
  - x4xx: Check for tear_down()'s existence
  - x4xx: Conditionally initialize DB flash
  - x4xx: Enable DBs to have updateable_components
  - x4xx: Enable MMCM configuration based on policy
  - x4xx: Enable MPM sync API for X410
  - x4xx: Explicitly pass MCR values to set_sync_source()
  - x4xx: Extend x4xx_rfdc_regs
  - x4xx: Factor clock control out of X4xxClockManager
  - x4xx: filter MCR list
  - x4xx: Improve SPLL comments
  - x4xx: Introduce X4xxClockPolicy
  - x4xx: Let RFDC control use clock policy
  - x4xx: Make sysref_delay part of clock policy
  - x4xx: mb_cpld: Add missing bitfields
  - x4xx: Minor preparations to x4xx.py for X440 support
  - x4xx: Move all clock control to single class
  - x4xx: Move common DB tasks from ZBX class to mixin
  - x4xx: Move enable_iq_swap to x4xx_rfdc_ctrl.py
  - x4xx: Move get_master_clock_rate() to DB-RPC
  - x4xx: Move MB CPLD creation to factory
  - x4xx: Move SPLL sync before RFDC config
  - x4xx: Optimize clock configuration at init
  - x4xx: Prepare clock management for multi-mcr
  - x4xx: Refactor x4xx_rfdc_ctrl
  - x4xx: Remove get_cal_eeprom_spi_node()
  - x4xx: Remove internal_temp_sensor
  - x4xx: Rename 'both' argument to 'all'
  - x4xx: rfdc: Add get_converter_rate() API
  - x4xx: rfdc: Pull fabric words value from registers
  - x4xx: Separate RFDC and MMCM resets
  - x4xx: Separate RFDC reset from its configuration
  - x4xx: Shut down tiles on tear_down()
  - x4xx: Trust the clock policy's default MCR
  - fpga: x4xx: Major updates in preparation for future devices
* multi_usrp
  - rfnoc: Added warning when handling tune_request
* octoclock
  - Fix uhd_usrp_probe error
* python
  - Add 'const' to get_continuous_tone(); improve sanity-checks
  - Add DramTransmitter class
  - Add X440 to image builder
  - Fix subdev_spec_t wrapping
  - multi_usrp: Remove spurious print
  - rfnoc: Add radio_control.get_{ticks,time}_now
  - signal: Add more waveforms to get_continuous_tone()
  - stream: Overload TxStreamer.recv_async_msg()
  - Wrap direction_t
  - Wrap stream_cmd_t::stream_mode
* Replay buffered TX streamer
  - Fix gaps in TX
* rfnoc
  - Add options for RFNoC image core headers
  - Add set_command_time and clear_command_time binding to Python API.
  - Allow interruption of streaming during overrun handling
  - Coerce replay packets to atomic item size
  - Demote some de-init DEBUG messages
  - Enable SEP throttle register
  - Fix disconnecting back-edges from graphs
  - Fix doxygen comments in rfnoc_graph
  - Fix sync calls for multi-timekeeper operation
  - Improve Doxygen for sync calls
  - Make edge comparison more flexible
  - radio: Always prefer register-based time access
  - radio: Make default SPP a multiple of max CHDR width
  - replay: Make default IPP a multiple of max CHDR width
  - Set DEVICE_FAMILY on stream endpoints
  - Support multiple CHDR widths in RFNoC image builder
  - update switchboard forwarding on property set
* SelfCal
  - Add startup_tile() for cal_mode selection
  - Enable parameters in self-cal executable
  - Expose config parameters
  - Remove self-cal from boot and fpga update
  - Trigger if clocking has changed
* tests
  - add delayed streaming start args
  - add packet capture raw udp tests
  - add streaming tests for UC_200 bitfile
  - benchmark_rate improvements
  - Fix Python warnings in parse_benchmark_rate.py
  - fix when the rx cmd's stream_now is set
* tools
  - Add changeset analyzer
  - Add clang-formatting tools
  - add devtest rule for changeset_analyzer
  - Remove fpga directory from Debian build
  - run all tests for manifest update
  - Update upload_debs.sh script
* UBX
  - Add VCO band calibration and map access
  - Initialize UBX set_tx_freq freq_lo variables to 0.0
  - Shift IF for RX frequencies <100 MHz
* uhd
  - doc: Add documentation for ADC self calibration
  - multi_usrp: Support multiple timekeepers on rfnoc devices
  - Update changelog with 4.1.0.x releases
  - x4xx: Add methods to query number of chans, samp rate
  - x4xx: Refactor ADC self cal
* usrpctl
  - add reset command
* utils
  - Add X4xx ADC threshold query script
  - Fix usrp2_recovery.py for Python3
* x4xx
  - get bool for force_reinit arg
  - pass reboot mpm command to host on new clock config for x440
  - Update BIST to match clocking refactoring
* x4xx_bist
  - replace set_clock_source for x440

## 004.004.000.000
* Features
  - Raw UDP Traffic to Remote Destination for RFNoC-enabled devices
* C API
  - Fix double-free issue with sensor values
* ci
  - Add clang-format 14.0 to the Ubuntu 22.04 container
  - devtest: Test E320 1G FPGA Image
  - Filter uhd_find_devices checks by device type
  - increase timeout for x4xx hardware test job
  - Pull UHD version from UHDConfigVersion.cmake
  - Replace Rhombus E320
  - Update docker repo location
* cmake
  - fix UHDAtomics.cmake to read custom Boost install prefix
  - Fix build with GCC 13 (add missing <cstdint> include)
* devtest
  - Add multi-spc timed command tests
* docs
  - Fix typo in Python API dox file
  - Phase noise consideration when using external clock with E320
  - rfnoc: Fix Doxygen warnings on chdr_packet::set_metadata()
  - Update manual for X3x0 raw UDP streaming
* e320
  - Allow internal GPSDO to be powered-down via UHD session args
* e3xx
  - add support for power calibration api
* examples
  - remote_rx: Add --mac-address argument
  - rx_samples_to_file: Add disk write speed check
  - rx_samples_to_file: Add multichannel option
  - Upgrade RFNoC example to Vivado 2021.1
* fpga
  - ci: Create local copy of patches to use
  - Cosmetic changes to rx_frontend_gen3_tb
  - docs: Fix AR76780 dependency
  - e320 Change MIG arbitration to RD_PRI_REG
  - Fix overflows in DDC
  - Fix overflows in quarterrate downconverter
  - Fix warnings in dds_freq_tune module
  - lib: Add align_samples module
  - lib: Add verilog-compatible wrapper for eth_ipv4_chdr_adapter
  - lib: Add ZPU support to SV transport adapter
  - lib: Fix indentation in setting_reg.v
  - lib: Fix inferred latch in ep_autonegotiation
  - lib: Support time and data updates in sim_radio_gen
  - lib: Update header for AXI4S add/remove bytes
  - Require AR76780 for X3xx and E3xx
  - Restore FIR filter in rx_frontend_gen3
  - rfnoc: Add align_samples testbench
  - rfnoc: Add timed sample alignment to radio
  - rfnoc: Fix inferred latch in chdr_strip_header
  - sim: Fix typo in clk_wait_f
  - tools: Detect check_timing issues during build
  - tools: Fix error detection in run_testbenches.py
  - x300: Bump FPGA compat to 39.1
  - x300: Change MIG arbitration to RD_PRI_REG
  - x300: Support advanced transport adapter
* host
  - ADC cal: Add ability to set calibration mode explicitly
  - cal: Rearrange ADC self calibration routine
* images
  - Update manifest - timed sample alignment in RFNoC
* lib
  - Fix warning in ctrlport_endpoint.cpp
  - topo graph: Fix rule-of-3 related compiler warnings
* mpm
  - Add a lock to the rpc server timer
  - Better error message for multiple assigned MACs
  - Fix rpc process shared state and port argument positions
  - Move parse_encoded_git_hash() to mpmutils
  - rfdc: Add X4xx 125e6 master clock rate
  - rpc server: Capture claim token value before releasing state lock
  - x4xx: Remove references to white rabbit
* n3xx
  - Increase tune timeout
* octoclock
  - Fix type of eeprom object in property_tree
* rfnoc
  - Add logging to some throw statements
  - lsm: Improve logging/error messages
  - Move detection of TAs post-LSM-init
  - streamers: Fix scaling factor
* tests
  - add ramdisk cfg option to streaming setup
  - add support for 10-100GB x410 raw udp
  - add x310 raw udp tests
* uhd
  - Fix RfnocGraph pybind binding for get_tree
  - python: Bind {separate,combine}_device_addr{s}
  - python: Make DeviceAddr behave like dict
  - When separating device_addr_t, keep indexed values
  - Add xport_adapter_ctrl core
* x300
  - Enable use of advanced transport adapters
  - Respect X300_FW_COMMS_FLAGS_ARP_FAIL flag
  - Update firmware for TA control

## 004.003.000.000
* ci
  - Add n310 rf tests to monopipeline
  - Add XQ testing to n321
  - Mark SucceededWithIssues as failure
  - Remove Fedora 34 and add Fedora 36
  - set required capability for windows builds
  - Workaround Ubuntu 18.04 systemd bug 1988563
* docs
  - Add known issue for Xilinx AR 76681
  - Clarify live install and remove version
* examples
  - Enable radio loopback for a single radio
  - rx_samples_c: Use error_code instead of return_code
* experts
  - Move expert framework into public API
* extension
  - Add extension example
  - Add extension framework
  - Add Extension Framework documentation
* features
  - Make all feature headers install
* fpga
  - ci: Upgrade to Vivado 2021.1
  - docs: Upgrade to Vivado 2021.1
  - e31x: Add PROTOVER to eth_internal
  - e31x: Cleanup MTU parameters
  - e31x: Fix IP dependencies
  - e31x: Upgrade to Vivado 2021.1
  - e320: Bump FPGA compat to 6.1
  - e320: Cleanup MTU parameters
  - e320: Support advanced transport adapter
  - e320: Upgrade to Vivado 2021.1
  - Fix target dependencies in Makefile.xxx.inc
  - Fix Vivado version check in viv_hardware_utils
  - lib: Add advanced features to IPv4 SV transport adapter
  - lib: Add chdr_strip_header module
  - lib: Add compat to Verilog transport adapter
  - lib: Add eth_ipv4_interface_tb
  - lib: Add MTU parameter to eth_internal
  - lib: Add NET_CHDR_W parameter to transport adapters
  - lib: Add RegPort SystemVerilog interface
  - lib: Add support for length in tuser in eth_ipv4_add_udp
  - lib: Add verilog-compatible wrapper for eth_ipv4_interface
  - lib: Fix addsub_hls
  - lib: Fix NODE_INST parameter in eth_internal
  - lib: Upgrade to Vivado 2021.1
  - n3xx: Add BUFG to SPI output line to ease timing
  - n3xx: Add PROTOVER to n3xx_mgt_wrapper
  - n3xx: Bump FPGA compat to 8.1
  - n3xx: Cleanup MTU parameters
  - n3xx: Fix async clocks relationship
  - n3xx: Remove unused USE_REPLAY parameter
  - n3xx: Support advanced transport adapter
  - n3xx: Upgrade to Vivado 2021.1
  - sim: Support unused tkeep in AxiStreamPacket::dump_bytes()
  - sim: Update struct enum initialization
  - sim: Workaround Vivado bug in ChdrIfaceBfm_tb
  - tools: Add utility to upgrade TCL-based BD
  - tools: Allow IP renaming with viv_ip_xci_editor.py
  - tools: Fix HLS IP builder for Vivado 2021.1
  - tools: Lattice build flow clean-up
  - Update makefiles to allow parallel FPGA builds
  - Use AR76780 patch for fir_compiler
  - x300: Cleanup MTU parameters
  - x300: Upgrade to Vivado 2021.1
  - x400: Bump FPGA compat to 7.9
  - x400: Fix link status detection of 10 GbE IP
  - x400: Fix NODE_INST for transport adapters
  - x400: Fix transport adapter PROTOVER
  - x400: Upgrade to Vivado 2021.1
  - x400: zbx: Revision Bump
  - zbx: Update HTML regmap
* host
  - if monotonic don't run monotonic algo
* images
  - Update filesystem images to point to 4.3.0.0-rc2
  - update fpgas for vivado 2021.1 upgrade
  - update manifest for raw udp streaming
  - installer: update ubuntu uhd library verison
* mpm
  - bump fpga compat for raw udp streaming
  - bump x4xx fpga compat
* MPMD:
  - Limit 1GbE MTU discovery to 1500
* python
  - Fix error from pybind11 2.10 update
  - update to pybind11 for Python 3.11
* rfnoc
  - Mutex graph on set_property
* tests
  - Setup isolated processors to use performance governor
* tune_map
  - Publish and simplify zbx_tune_map
* uhd
  - multi_usrp.cpp remove commented out code
  - Revert Raw UDP Host Changes
  - update to uniform SPDX license identifier

## 004.002.000.001
* cal
  - add method to get the current power cal tracking mode
* ci
  - Add b210 hardware to rhombus
  - add devtest e320 support
  - Add devtests to hardware-test-dev
  - Add fedora rpm installer build
  - Add n310 into devtests
  - Add n321 to devtest
  - Add new x3xx hardware to rhombus
  - Add package builder container entry
  - Add package source support to pipelines
  - Add recv and send frame tuning for streaming
  - Add Windows installer signing
  - Build init_usrp example for macOS
  - Build init_usrp example for Windows
  - call powerbtn multiple times to power on
  - change gr-ettus ref to master
  - devtests: fix knownhost entry
  - Enable root privileges for non-DPDK streaming tests
  - Fix mgmt_addr=None entry for X310 DPDK case
  - Increase devtest job timeout to 90 minutes
  - Make Windows installer job self-contained
  - Mark devtest as failure on SucceededWithIssues
  - Only include rpm files in the Fedora installer artifacts
  - Point meta-ettus repo ref to v4.2.0.0
  - Run multiple fpgas per job
  - set benchmark rate priority to high
  - set meta-ettus-dev repo to zeus-ci
  - Set n310 and n321 to specific agents
  - streaming: flash x310 fpga
  - Update branches to UHD-4.2
* cmake
  - Add support for fedora rpm versioning
  - Cache UHD_VERSION in all cases
  - Drop .deb generation via cpack in favour of better tools
* debian
  - Change jellyfish to jammy
  - Remove hirsute; add jellyfish support
  - Resolve lintian issues
* doc
  - Fix generation of man pages
  - Remove ZBX phase sync documentation
* docs
  - DPDK Linux kernel underruns solution
  - Update section on radio transport protocols
* e3xx
  - change radio_control_impl mutex to be a recursive_mutex
* examples
  - Fix rfnoc_replay_samples_from_file
  - gpio: output before end of stream
  - gpio: Refactor example
* fpga
  - Add READMEs describing Lattice and ADI IP sourcing
  - Fix first arg in calls to $fatal()
  - lib: Add read-only strategy for port B in 2-port RAM
  - lib: Update error call for undefined RW mode
  - rfnoc: Remove rfnoc_version from target YAML
  - x400: Fix AXI/LBUS testbench names
  - x400: zbx: Add support for XO3 CPLD variant.
* host/README.md
  - Fix links to knowledge base
* images
  - Update manifest with latest cpld firmware
* lib
  - Add missing include to offload_io_service_client.hpp
  - Remove stray file async_msg.hpp
* mpm
  - add support for lattice zbx cpld
  - Factor out transport API into PeriphManagerBase
  - Fix expected CPLD filename for x4xx
  - udp: Fix Pylint warnings in UDP-related files
  - x4xx: Make get_chdr_link_types() more generic
  - xportmgr_udp: Include iface name in info
* n310
  - Improve LO source control options for ALL and LO2 cases
* n320
  - Fix reading DB serial in applying corrections
  - Improve comments regarding low band
  - Revert PLL lock time reduction
* python
  - Check rfnoc_version in rfnoc_image_builder
  - cmake: Detect python virtual environments
* rfnoc
  - Add atomic_item_size property to FFT block
  - Add LUA based dissector
  - fix double conversions
  - Fix register_xport_hop_cfg_fns() usage
  - Fix vector use in replay_block_control_impl
  - Fix warnings in replay_block_control
  - Improve comments regarding streaming and mgmt. code
  - Improve documentation for chdr_ctrl_endpoint
* tests
  - mark test jobs as an overall failure if there is a test failure
  - Remove packet_handler_benchmark
  - streaming: add option to run streaming tests in dev pipeline
  - streaming: add support for B210 DUTs
  - streaming: add support for more DUTs
  - streaming: don't set master clock rate on x310
  - streaming: fix x310 test case values
  - streaming: include dual_SFP parameter for all cases
  - streaming: mark non-dpdk failures as xfails
  - streaming: pass the correct LD_LIBRARY_PATH to pytest
  - streaming: select appropriate uhd config file before test runs
  - streaming: temporarily mark b210 dropped samples as an xfail
  - streaming: use assert instead of pytest.fail for underruns/overruns
* tools
  - package_source remove double bracket
* uhd
  - change default into option flag in register definition
  - Enable branch naming on Azure Pipelines
  - fix minor typo when querying tx sensors property tree
  - refactor get_all_addrs to remove duplicates
* usrp2
  - Remove unused code segments
* utils
  - Remove usrp_e3x0_network_mode
  - uhd_images_downloader: Increase default image download size limit
  - uhd_images_downloader: Print name of file that exceeds limit
  - uhd_usrp_probe: Add DB rev to output
  - x300_reset: Make py3k-ready
* x300
  - Change order of GPIO banks
  - Fix invalid GPIO source bank error message
* zbx
  - Remove stray include

## 004.002.000.000
* b200
  - Re-sync times
  - Fix overflow handling
  - Move the B200 radio control core into usrp/b200/
* cal
  - Use safe version of set_thread_priority()
  - Fix handling of discontinuities in power calibration data
* chdr
  - Rename var max_size_bytes to avoid confusion
* ci
  - Weekly builds for UHD-4.2 docker images
  - Update builds to macOS 12 Monterey
  - Update commit vcpkg and CMake version
  - Set continue on error and reduce timeout to 60
  - Remove obsolete x4xx pipelines
  - Upload devtest logs as artifact
  - Propagate downloader errors and lower timeout
  - Enable ctest on macOS builds
  - Flash fpga on x410 ATS runs
  - Add mpm folder to triggers
  - Change yaml dependency to ruamel
  - Add support for Ubuntu 22.04
  - Remove Fedora 33 and add Fedora 35
  - Add libuhd python dependencies to macOS
  - Add x410 test to mono pipeline
  - Enable building of init_usrp
  - Make uhdSrcDir directly reference Build.SourcesDirectory
  - Build gnuradio and gr-ettus
  - Add gnuradio deps to images
  - Generate installed binaries for downstream use
  - Add displayNames to parameters
  - Add embedded builds to uhd mono pipeline
  - Separate pipeline builds for different os
  - Refactor dockerOSName to buildOSName
  - Build on macOS
  - Device wait to redlock scope for Vivado close
  - Add Fedora 34 and remove Fedora 32
  - rebuild docker images weekly
  - Refactor installers and add Windows support
  - Add gnuradio gr-ettus to oe builds
  - Update template to use checkout_meta_ettus
  - Add custom boost version support
  - Remove documentation-only changes from pipeline runs
  - Enable batch CI
  - Split CI and PR pipelines for mono pipeline
  - Enable custom CXX flags, enable -Werror
  - Let make keep building upon failure
  - Add clang as a compiler to all Fedora and Ubuntu containers
  - Add CLA assistant
* cmake
  - mpm: Skip installing binaries for SIM
  - doxygen: Make MATHJAX_RELPATH configurable via CMake
  - ncurses: fix building with split tinfo
  - Remove libatomic check on macOS
  - Added libatomic check for boost/lockfree/queue.hpp
  - uhdboost: Fix check for UHD_BOOST_REQUIRED being set
  - Replace distutils.sysconfig with sysconfig
  - Replace distutils with CMake for version checks
  - Set debug to -Og for Clang builds
  - tests: Conditionally compile tests for X400
  - Use LooseVersion to ensure correct version comparisons
  - Fix rfnoc-example (CMake paths)
  - Fix issues with static builds and CMRC
  - Replace CMAKE_{SOURCE,BINARY}_DIR with UHD_*_DIR
  - tests: Add build-python path to PYTHONPATH
  - Add check for libatomic linking requirement
  - Remove duplicate entry in LIBUHD_PYTHON_GEN_SOURCE
  - Fix VS names and use relative for images
  - remove redundant include
  - Correctly set and unset any CMAKE_REQUIRED variables
  - Fix finding PkgConfig to work robustly (without CMake warnings)
* config
  - Fix clang fallthrough syntax
* conversion
  - Saturate transmit IQ levels on NEON architectures.
* convert
  - Make narrowing conversions saturate
  - Add benchmarking abilities
  - Minor cleanup
* core
  - Remove boost::math in favor of std cmath
* dbsrx
  - Fix issue with loop variable
* debian
  - Update version number to 4.2.0
  - Update control and package building
* debs
  - Update upload_debs script
* deps
  - rpclib: Replace distutils.dir_util with shutil
* devtest
  - Clarify data type in multi_usrp_test::send_waveform()
  - Add receive stability test to B2xx devtest
  - Add receive stability test
* dissectors
  - Fix whitespace formatting in CMake files
  - Fix inclusion of glib.h and Python version
* docs
  - multi_usrp: Clarify GPIO source bank meaning
  - x4xx: Document configuring eth0 static IP
  - n310: Add Filter API section
  - e31x: Update information on GPIO pin header
  - Add 100GigE documentation
  - Move X4x0 GPIO API to be subpage
  - Update E320 docs
  - x4xx: Remove redundant GPIO section
  - rfnoc: Add doxygen tag for missing parameter
  - Improve table on 'identification'
  - Update instructions for changing hostname
  - Update sfp port config location
  - Update manual for new X410 default targets
  - Fix Doxygen warnings
  - Fix reference to RFNoC documentation
  - rdtesting: Remove invalid rate configuration
  - stream_args: Clarify usage of stream_args_t::channels
  - n3xx: Add info on customizable band edges and gain profiles
  - x4xx: Add new FPGA image descriptions
  - Improve documentation for replay block
  - Remove superfluous stylesheet
  - x310: Remove reference to ORC
  - Update n3xx tuning notes
  - Remove full path names from Doxygen generation
  - Add shim Sphinx config for readthedocs
  - Improve page on RFNoC block properties
  - Fix page on GPIO
  - Fix MathJax formulae rendering
  - Amend page on RFNoC properties
  - Remove bmaptool instructions for writing filesystems
  - Remove obsolete man pages
  - Update DPDK documentation
  - Improve documentation for properties and -propagation
  - Several minor manual improvements
  - x410: Document GPIO API and capabilities
  - Collect all RFNoC block controllers in a module in the manual
  - Align dependencies and bump deb package versions
  - Clarify set/get_gpio_attr() and GPIO banks
  - Fix GPIO documentation example
  - x410: Fix info on loading SD card images with bmaptool
  - Improve docs for rx_streamer::recv() on overruns
  - sync: Update page on synchronization
  - Fix typo in ZBX Block Diagram
  - usrp_x4xx: improve filesystem update instructions
  - x4xx: Update information on CPLD updating
* dpdk
  - Add support for DPDK 18.11 API
  - Correct MTU warning message
  - Support new MTU discovery
  - Disable warnings for using an experimental feature
  - Upgrade to DPDK 19.11 API
* e31x/e320
  - Amend LO-locked sensor names
* e320
  - mpm: Remove monitor thread
* e3xx
  - Fix frequency querying
  - Remove unused constant
* examples
  - gpio: Separate bank and port arguments
  - Fix channel indexing when reading USRP power
  - Fix gain testbench name
  - Add replay_capture.py
  - benchmark_rate improvements
  - replay: Improve rfnoc_replay_samples_from_file
  - Support multiple streamers in benchmark_rate
  - Fix tx_bursts bandwidth/freq/gain reporting
  - Improve rfnoc_rx_to_file
  - Use cmul for gain block in-tree IP example
  - Test all variants in gain testbench
  - Make IQ order clear in gain RFNoC block
  - Improve txrx_loopback_to_file (late recv, Boost, timing)
  - Show how to use in-tree Verilog header
  - Add x400/x410 target to RFNoC example
* fgpa
  - rfnoc: Set Replay memory transactions to 2 KiB
* firmware
  - Remove N230 firmware
* fpga
  - x400: Increase replay SEP buffer sizes
  - x400: Add timed commands support for all radio ctrlport endpoints
  - Replay block version 1.1
  - Update all RFNoC images
  - ci: Add X4_400 to CI targets default list
  - n3xx: Add missing BIST image core headers
  - Use PROTOVER and CHDR_W from RFNoC image builder
  - n3xx: Fix clock frequency comments
  - e31x: Update DRAM IP simulation
  - e31x: Fix DRAM traffic gen IP name
  - ci: Schedule weekly FPGA pipeline run
  - ci: Improve IP build caching
  - ci: Add stages-based pipeline
  - ci: Ignore objects in hwtools
  - tools: Add CG_400 image to X410 binaries package
  - x400: Add x410_400_128_rfnoc_image_core
  - rfnoc: Fix PPS edge detection
  - rfnoc: Make Replay packet length independent of burst size
  - Add SPDX license identifier
  - x400: Cleanup FPGA Makefile
  - x400: Add support for DRAM with 400 MHz BW
  - x400: Change AXI XB for DRAM to 512-bit
  - rfnoc: Fix strobe probability in radio simulator
  - rfnoc: Regenerate noc_shells
  - x400: Set replay SEP buffers to twice MTU
  - Add SPDX license identifier
  - e320: Add DRAM ports
  - n3xx: Fix DRAM FIFO address alignment
  - rfnoc: Change AWIDTH default for axi_ram_fifo
  - e31x: Add DRAM support
  - rfnoc: Add BLANK_OUTPUT to FIR filter block's parameters
  - x400: Add DRAM enable macro
  - b2xx: Generate utilization report files
  - x400: zbx: cpld: Bump ZBX regmap copyright
  - x400: cpld: Bump CMI wrapper copyright
  - ci: Increase PR pipeline timeout
  - x400: Bump minor version
  - x400: Update rfnoc_image_core files
  - x400: Add Replay to 100 and 200 MHz images
  - x400: Add DRAM support
  - x400: Set DRAM speed to 2.0 GT/s
  - x400: Add axi_inter_4x64_512_bd IP
  - x400: Add axi_inter_2x128_512_bd IP
  - docs: Add B205mini FPGA info
  - n3xx: rh: cpld: Refactor CPLD build process
  - Remove noc_shell_regs.vh and sim_rfnoc_lib.svh
  - x400: cpld: Bump copyright
  - x400: Bump copyright
  - x400: Expand PS GPIO port for DIO control
  - x400: Add GPIO control via ATR and DB state
  - x400: Connect Radio Blocks to DIO
  - tools: Fix adding directories for HDL source
  - hls: Add version to generated HLS IP
  - x400: Fix rfnoc_image_core.vh path
  - e320: Connect CTRL_IN pins to FPGA
  - e320: Remove copy/paste from N310 code
  - x300: Fix time register readback
  - usrp2: update build tools to use python3
  - tools: Update Vivado scripts to use python3
  - x300: OR ATR signals going into db_control
  - x400: cpld: Add manufacturing support
  - x400: Refactor CPLDs build process
  - tools: Add Quartus build utilities
  - Add ability to get time from Radio block
  - rfnoc: Add RFNoC CHDR resize module
  - rfnoc: Add CHDR management util functions
  - lib: Clean up axi_mux
  - rfnoc: Add labels to axi_switch generate blocks
  - rfnoc: Add labels to chdr_mgmt_pkt_handler
  - rfnoc: Add documentation to chdr_xb_routing_table
  - Shorten line length for Launchpad linter
  - x300: Update synchronizer constraint
  - n3xx: Update synchronizer constraint
  - lib: Update example constraint in synchronizer
  - Update help message for setupenv.sh
  - Remove stale references to UHD_FPGA_DIR
  - tools: Add UHD_FPGA_DIR definition to synthesis
  - Set default part for sim in setupenv.sh
  - Fix Xilinx bitfile parser for Python 3
  - Re-order error and data packets
  - Fix sc16 to sc12 converter
  - rfnoc: Fix EOB loss in DUC
  - sim: Add PkgComplex, PkgMath, and PkgRandom
  - lib: Clean up and document lib files
  - x400: Remove stale information in register map
  - ci: Add testbench pipeline
* github
  - Amend PR template with a checkbox for compat numbers
* host
  - devtest: Allow getting mgmt_addr in tests
  - devtest: Add GPIO tests for reading back ATR settings
  - x410: Emulate GPIO classic ATR mode using new mode
  - x410: Cache GPIO source in mb_controller
  - Add power_reference_iface::sptr declaration
  - Create meta_range_t::as_monotonic
  - test: Add UHD_UNITTEST_LOG_LEVEL override
  - test: Add GPIO DDR register to x4xx mock
  - Throw exception when accessing properties with incorrect type
  - Minor cleanups in property_tree code
  - x4xx: Fix some warnings on mac OS
  - zbx: Expose tuning table on property tree
  - x4xx: gpio: Properly unmap FPGA GPIO values
  - fix build with DPDK v21.11 LTS
  - Implement nameless_gain_mixin
  - Make get_mb_controller public
  - tests: Make x4xx unit test support GPIO
  - multi_usrp: Merge set_tx_subdev_spec and set_rx_subdev_spec
  - Add divider constructor to spi_config_t
  - rf_control: Add internal antenna API abstraction.
  - tests: Add unit test for ZBX antenna API
  - Make core_iface inheritence virtual
  - Implement operator<< for data_reader_t
  - docs: Fix incorrect usage in GPIO docs
  - Add char* overload for device_addr_t
  - Make radio_control constants an enum
  - Fix typos and small things
  - Add ability to get time from Radio block
  - python: Add gpio_voltage python API
  - Add gpio_voltage discoverable feature
  - Add RPC calls for GPIO voltage
  - python: Return mb_controller with reference_internal
  - x4xx: Implement GPIO API
  - Add GPIO functions to MPM RPC shim
  - gpio: Create gpio_atr_offsets to store GPIO registers
  - Add static_assert to prevent meta_range_t(0,0)
* ic_reg_maps
  - Generate save state read functions
* images
  - Remove references to N230
  - Add utilization report files to B2xx image files
  - Revert x4xx manifest and FPGA compat update
  - Update N32x CPLD manifest
  - Make get_images_dir return absolute path
  - Clear out code from days of yore
  - Add the utilization report for X410 images (X4_200)
  - Update image packager script for Python 3
  - Update manifest
* lib
  - Set dynamic_lookup and flat_namespace
  - Make simple_claimer atomic
  - SSPH: Fix comment for convert_to_in_buff()
  - Remove superfluous includes of udp_zero_copy.hpp
  - Remove all remaining usage of boost::numeric::bounds<>
  - transport: Mark typecast as intended
  - transport: Initialize _hshake_args_server
  - rfnoc: Make implicit typecasts explicit
  - rfnoc: Change enum node_type to enum class
  - Add various missing includes
* libusb
  - Remove unused context variable
* log
  - Add DPDK version to system info
* math
  - fp_compare: Adapt fp_compare_epsilon API to actual use
* max287x
  - Fix key in table of freq ranges
* mpm
  - ad937x: Fix tuning code
  - x4xx: Fix clock/time source API
  - e3xx: Fix get_sync_sources() API
  - PeriphManagerBase: List all sync-related methods
  - Make default clock/time source values state-less
  - e3xx: Simplify code referring to self.dboards
  - speed up reading gps mboard sensors
  - n3xx: Recommend reboot USRP after BIST
  - x4xx: Remove GPIO classic mode register
  - Factor out common code between E31x_db and Neon classes
  - e3xx: Fix Pylint warnings in periph_mgr classes
  - fix ref_locked sensor on n320
  - rh: Minor linter cleanup
  - Use receiving socket for sending response
  - eeprom: Fix default values in EEPROM utilities
  - xportmgr_udp: Match DNAT arguments to manpage
  - eeprom: Improve E320 and N3x0 EEPROM code/comments
  - cmake: Remove installation of non-relevant EEPROM tools
  - x4xx: Add function to map from gpio src list indices
  - Add device name to discovery process
  - x4xx: Update FPGA minor compat number
  - Add x4xx DRAM BIST
  - Fix units for DRAM BIST
  - Remove further references to rfnoc_num_blocks
  - x4xx: Align get/set_gpio_src mappings with HDMI pinouts
  - Demote WARNING on minor compat mismatch to DEBUG
  - X410: Set correct tuning word
  - x410: Fix docstrings related to GPS sensors
  - e320/e31x: Fix lo-lock sensors
  - x4xx: Add log message for older DIO boards
  - x4xx: Move DioControl into its own module
  - x4xx: Add checks before accessing self.dio_control
  - x4xx: Remove superfluous import
  - x4xx: update mboard_max_rev
  - x4xx: Allow retrieving external power state
  - x4xx: Allow GPIO0 and GPIO1 as port names
  - x4xx: add DIO GPIO API configuration methods
  - Fix handling of rfic_digital_loopback argument
  - rfdc: Tear down RFDC on teardown
  - x4xx: update mboard_max_rev
  - add X410 support for 250e6 master clock rate
  - Expose motherboard regs for debugging
  - Skip DTS compatibility check if DTS is not being updated.
  - zbx: Fix revision compat check
  - Update usrp_update_fs to support X410
  - max10_cpld_flash_ctrl: improve programming log
* mpmd
  - Add MTU plausibility check
  - Increase UHD-side MTU cap for 10 GbE and 1 GbE
  - Add discoverable feature for trig i/o mode
* multi_usrp_rfnoc
  - Set assignment instead of equality
  - Add TX buffering using Replay
  - Reduce latency of get_time_now()
* n310
  - Add Filter API to n310
  - Add frontend bandwidth control
  - cpld: Get and set TX ATR bits
  - Deactivate frontend components on radio shutdown
* n320
  - Fix issue that occasionally prevents lo_locked upon first set_freq
  - Reduce PLL lock time
* n3x0/e3x0
  - Remove reference to "master FP-GPIO radio"
* n3xx
  - Add support for rev 10
  - Fix White Rabbit
* python
  - rfnoc: Add new replay block APIs to Python API
  - Add __init__ to uhd.utils
  - rfnoc: Add connect_through_blocks() and get_block_chain()
  - Read number of ports from grc file in image builder
  - Fix RuntimeError: dictionary changed size during iteration
  - rfnoc: Add get_property bindings
  - Use setup from setuptools
  - multi_usrp: Add set_rx_spp()
  - multi_usrp: Fix issues in send_waveform()
  - multi_usrp: Fix issues with recv_num_samps()
  - Fix dropped-sample calculation in benchmark_rate.py
  - multi_usrp: Fix overloaded function definition
  - Add new method bindings to noc_block_base
  - rfnoc: Change reference type for noc_block_base export
* radio
  - Improve log messages for non-implemented corrections
* responder
  - Fix printw function arguments
* rfnoc
  - Update image builder to check for deprecated blocks
  - Add filter_node python bindings
  - Modify prop. propagation algorithm (back-edge resolution)
  - graph: Allow property forwarding on back-edges
  - Fix test_timed_commands for RFNoC devices
  - Remove redundant RFNoC block descriptions
  - Update device port names in image core YAML
  - Update image builder to check for deprecated port names
  - Make RFNoC device port names consistent
  - replay: Add ability to capture and read async info
  - fir filter: Add support for multiple channels to block controller
  - Remove UHD3-API usages
  - radio: Explicitly set MTU forwarding policy to DROP
  - Fix block buffer sizes referring to MTU
  - Refactor ctrlport_endpoint; fix MT issues
  - window: Set window size register after loading coefficients
  - replay: Add atomic item size property
  - replay: Add action handler for stream commands
  - graph_utils: Add ability to declare back-edges
  - Remove references to nocscript from YAML files
  - Fix spelling in property resolution error message
  - Expose buffer parameters for DRAM FIFO block
  - Rename and enlarge axi4_mm IO signature
  - Update the MTU forwarding property for some blocks
  - Set the default MTU forwarding policy to ONE_TO_ONE.
  - Add post_init() method to noc_block_base
  - Fix _set_subdev_spec() helper function
  - set UHD_API_HEADER on property_t
  - Cache and re-use host endpoints
  - Ignore errors in ctrlport response packets if ACKs not wanted
  - Always clear response queue in ctrlport_endpoint
  - Fix DSP frequency accuracy
  - Add atomic item size property for RFNoC blocks
  - transport: Check if streamers are connected in send() and recv()
  - ddc/duc: Improve variable name for _set_freq()
  - radio: Fix comment in radio_control_impl
  - graph: make topology failure more descriptive
  - Fix block_id::get_tree_root()
  - Fix back-edge consistency check
  - Add ops pending to management op
  - Fix noc_shell direction comments
  - Enable drop counter on chdr_ctrl_endpoint
  - Change default block behaviour
  - Clarify usage of MTU vs. max payload size, remove DEFAULT_SPP
  - replay block: Disable prop and action propagation
  - Add more comments to rfnoc_graph
  - Fix issue in uhd::rfnoc::connect_through_blocks()
  - radio: Fix async message handling channel checks
  - mgmt_portal: Fix order of validity checks
  - Add CHDR width to make args
  - Make chdr_w_to_bits() C++11-compatible
  - blocks: Minor cleanup (whitespace, typos)
  - Remove cruft from UHD 3 (constants)
  - mgmt_portal: Remove two unused variables
  - Add vivado-path to rfnoc_image_builder
  - ddc: Improve unit tests and documentation
  - duc: Fix frequency range for DUC block
  - duc: Remove stale references to CORDIC
  - Allow find_blocks to search by device number or block count.
  - Fix block id check to allow underscore
  - Remove obsolete constant
* rh
  - Fix auto DC-offset correction and auto-IQ balance APIs
* siggen
  - Fix direction of rotation
* sim
  - Update chdr_16sc_to_sc12 testbench
* systemd
  - Enable tx flow control automatically
* tests
  - Add filesystem flashing to streaming tests
  - x410: Add GPIO tests to X410 devtest
  - add support for new benchmark_rate args
  - Fix potential resource leak
  - Build uhd_test library as static when `-DBUILD_SHARED_LIBS=ON`
  - rfnoc: Add another loop graph test
  - Streaming tests setup
  - Enable automated streaming tests on X410
  - Add X410 100GbE tests
  - rfnoc: Amend mock nodes with action support
  - Add complex include to resolve build
  - Use new args for x410 streaming tests
  - Apply clang-format to convert_test
  - Fix converter benchmark disable on Boost <1.68
  - Atomicize counters in benchmark_rate
  - Add saturating test cases
  - Add conversion benchmarking tests
  - Force converter tests to be run with all available prios
  - Modularize x4xx_radio_mock to use it in other tests
  - Disable x4xx_radio_block_test on macOS
  - Add replay-back-edge test
  - Remove non-functional DPDK test
  - Add default length for automated streaming tests
  - Add automated streaming tests
  - Add streaming setup script for performance enhancements
  - Remove skip_dram from streaming performance test script
  - Fix rfnoc_graph mock nodes stop-stream command
  - Use reference type to prevent copy
  - Fix check in link_test
  - Add recv(0) case to rx_streamer_test
  - Add missing header, required by some compilers
* tools
  - Fixes to uhd_phase_alignment.py
  - uhd_ubuntu_deb: Require --buildpath
  - Fix control packet byte enable in CHDR dissector
  - Add general purpose tool for USRP configuration
  - Add check for SEP with ctrl enabled to rfnoc_image_builder
  - Add missing fields to CHDR dissector
  - Fix rfnoc dissector build
* uhd
  - Update MPM compat minor
  - Replay block version 1.1
  - Fix compiler macro ordering
  - Fix negligible copy/paste typos in rhodium radio control
  - Harmonize fuzzy frequency comparisons
  - Remove FSRU-related files
  - rfnoc: Let connect_through_blocks() return edge list
  - Expose uhd::dict and fs_path with UHD_API_HEADER
  - Demote WARNING on minor compat mismatch to DEBUG
  - Fix non-standard function name macros
  - Update git://github.com references to https
  - Allow pass raw IQ data array to tone generator
  - Remove tcp_zero_copy
  - nsis: Remove broken shortcuts in Windows installer
  - Fix RFNoC-capable detection in uhd_usrp_probe
  - Remove superfluous boost/bind.hpp includes
  - Add support for max10 variants
  - Update manifest for x410 cpld
  - Update num_recv_frames calculation for ctrl links
  - Remove spurious template from property dtor
  - Fix spelling errors
  - math: Replace wrap-frequency math with a single function
  - math: Add a sign() function
  - Replace Boost mutexes and locks with standard options
  - zbx: Prevent TX antenna config from disrupting RX
  - mpm: Expose filesystem version information on MPM tree
  - transport: Avoid exceptions in disconnect_receiver()
  - Remove Boost version checks for Boost 1.61
  - streamer: Restore original recv(0) semantics
  - Fix usage of std::abs with template parameters
  - Update version, manifest, and changelogs
  - Replace boost::thread::id with std::thread::id
* utils
  - Check install-prefix for images
  - string: Add split string utility function
  - Add comment re overclocking
  - Modify set-tx-gain procedure to update gain in one go
  - Fix comment in noc_shell Mako template
  - Add space to rfnoc_image_builder help
  - Get signal above noise floor when finding optimal gain
* x300
  - Fix LED configuration for TwinRX
  - Remove usage of CHDR_MAX_LEN_HDR
  - Fix error message for wrong reference frequency
  - Remove unused variables in x300_eth_mgr.cpp
  - Fix MAX_RATE_1GIGE value
  - Fix sfpp_io_core tuser width
  - Initialize struct variable before using it
* x410
  - Correct 100GbE link speed
* x4xx_bist
  - Use get_mpm_client in gpio bist

## 004.001.000.007
* mpm
  - Simplify x4xx_bist nsync_fabric
* ci
  - Update commit vcpkg and CMake version
* test
  - Add proper include

## 004.001.000.006
* mpm
  - add support for lattice zbx cpld
* N320
  -  Revert PLL lock time reduction
* images
  -  Update manifest with latest cpld firmware
  -  Update ZBX CPLD image in manifest
  -  zbx lattice cpld image manifest
* uhd
  - fixup! add support for max10 variants

## 004.001.000.005
* ad9361
  -  Add comment re overclocking
  -  Modify set-tx-gain procedure to update gain in one go
* b200
  -  Re-sync times
  -  Move the B200 radio control core into usrp/b200/
* cal
  -  Use safe version of set_thread_priority()
* ci
  -  Device wait to redlock scope for Vivado close
  -  Add Fedora 34 and remove Fedora 32
  -  Refactor installers and add Windows support
  -  Add custom boost version support
  -  Remove documentation-only changes from pipeline runs
  -  enable batch CI
  -  Split CI and PR pipelines for mono pipeline
  -  Enable custom CXX flags, enable -Werror
  -  Let make keep building upon failure
  -  Add clang as a compiler to all Fedora and Ubuntu containers
* cmake
  -  use LooseVersion to ensure correct version comparisons
  -  Fix rfnoc-example (CMake paths)
  -  Fix issues with static builds and CMRC
  -  Replace CMAKE_{SOURCE,BINARY}_DIR with UHD_*_DIR
  -  tests: Add build-python path to PYTHONPATH
  -  Add check for libatomic linking requirement
  -  remove duplicate entry in LIBUHD_PYTHON_GEN_SOURCE
  -  Fix VS names and use relative for images
* dbsrx
  -  Fix issue with loop variable
* debs
  -  Update upload_debs script
* devtest
  -  Clarify data type in multi_usrp_test::send_waveform()
  -  Add receive stability test to B2xx devtest
  -  Add receive stability test
* dissectors
  -  Fix whitespace formatting in CMake files
  -  Fix inclusion of glib.h and Python version
* docs
  -  Several minor manual improvements
  -  Collect all RFNoC block controllers in a module in the manual
  -  Align dependencies and bump deb package versions
  -  Clarify set/get_gpio_attr() and GPIO banks
  -  Fix GPIO documentation example
  -  x410: Fix info on loading SD card images with bmaptool
  -  Improve docs for rx_streamer::recv() on overruns
  -  sync: Update page on synchronization
  -  Fix typo in ZBX Block Diagram
  -  x4xx: Document configuring eth0 static IP
  -  Remove bmaptool instructions for writing filesystems
* examples
  -  Use cmul for gain block in-tree IP example
  -  Test all variants in gain testbench
  -  Make IQ order clear in gain RFNoC block
  -  Improve txrx_loopback_to_file (late recv, Boost, timing)
  -  Show how to use in-tree Verilog header
  -  Add x400/x410 target to RFNoC example
  -  gpio: Separate bank and port arguments
  -  usrp_power_meter: fix channel indexing when reading USRP power
* fpga
  -  Revert "Add ability to get time from Radio block"
  -  Add ability to get time from Radio block
  -  rfnoc: Add RFNoC CHDR resize module
  -  rfnoc: Add CHDR management util functions
  -  lib: Clean up axi_mux
  -  rfnoc: Add labels to axi_switch generate blocks
  -  rfnoc: Add labels to chdr_mgmt_pkt_handler
  -  rfnoc: Add documentation to chdr_xb_routing_table
  -  Shorten line length for Launchpad linter
  -  x300: Update synchronizer constraint
  -  n3xx: Update synchronizer constraint
  -  lib: Update example constraint in synchronizer
  -  Update help message for setupenv.sh
  -  Remove stale references to UHD_FPGA_DIR
  -  tools: Add UHD_FPGA_DIR definition to synthesis
  -  Set default part for sim in setupenv.sh
  -  Fix Xilinx bitfile parser for Python 3
  -  rfnoc: Fix EOB loss in DUC
  -  sim: Add PkgComplex, PkgMath, and PkgRandom
  -  lib: Clean up and document lib files
  -  x400: Remove stale information in register map
  -  ci: Add testbench pipeline
* host
  -  Revert "Add ability to get time from Radio block"
  -  Add ability to get time from Radio block
  -  python: Return mb_controller with reference_internal
  -  x4xx: Implement GPIO API
  -  Add GPIO functions to MPM RPC shim
  -  gpio: Create gpio_atr_offsets to store GPIO registers
* images
  -  Update image packager script for Python 3
* lib
  -  Remove all remaining usage of boost::numeric::bounds<>
  -  transport: Mark typecast as intended
  -  transport: Initialize _hshake_args_server
  -  rfnoc: Make implicit typecasts explicit
  -  rfnoc: Change enum node_type to enum class
  -  Add various missing includes
* libusb
  -  Remove unused context variable
* mpm
  -  x4xx: update mboard_max_rev
  -  x4xx: Allow GPIO0 and GPIO1 as port names
  -  x4xx: add DIO GPIO API configuration methods
  -  mpm: x4xx: Add checks before accessing self.dio_control
  -  Fix handling of rfic_digital_loopback argument
  -  rfdc: Tear down RFDC on teardown
  -  add X410 support for 250e6 master clock rate
  -  Expose motherboard regs for debugging
* mpmd
  -  Increase UHD-side MTU cap for 10 GbE and 1 GbE
* multi_usrp_rfnoc
  -  Revert "Reduce latency of get_time_now()"
  -  Reduce latency of get_time_now()
* n320
  -  Reduce PLL lock time
* n3x0/e3x0
  -  Remove reference to "master FP-GPIO radio"
* n3xx
  -  Add support for rev 10
  -  Fix White Rabbit
* python
  -  multi_usrp: Add set_rx_spp()
  -  multi_usrp: Fix issues in send_waveform()
  -  multi_usrp: Fix issues with recv_num_samps()
  -  Fix dropped-sample calculation in benchmark_rate.py
  -  multi_usrp: Fix overloaded function definition
  -  Add new method bindings to noc_block_base
  -  rfnoc: Change reference type for noc_block_base export
* responder
  -  Fix printw function arguments
* rfnoc
  -  radio: Fix async message handling channel checks
  -  mgmt_portal: Fix order of validity checks
  -  blocks: Minor cleanup (whitespace, typos)
  -  mgmt_portal: Remove two unused variables
  -  Add vivado-path to rfnoc_image_builder
  -  ddc: Improve unit tests and documentation
  -  duc: Fix frequency range for DUC block
  -  duc: Remove stale references to CORDIC
  -  siggen: Fix direction of rotation
* rh
  -  Fix auto DC-offset correction and auto-IQ balance APIs
* tests
  -  Remove skip_dram from streaming performance test script
  -  Fix rfnoc_graph mock nodes stop-stream command
  -  Use reference type to prevent copy
  -  Fix check in link_test
  -  Fix potential resource leak
* tools
  -  Fix rfnoc dissector build
* uhd
  -  add support for max10 variants
  -  update manifest for x410 cpld
  -  Update manifest
  -  update num_recv_frames calculation for ctrl links
  -  Remove spurious template from property dtor
  -  Fix spelling errors
  -  mpm: Expose filesystem version information on MPM tree
  -  Remove Boost version checks for Boost 1.61
  -  Fix usage of std::abs with template parameters
* utils
  -  Get signal above noise floor when finding optimal gain
* x300
  -  Fix error message for wrong reference frequency
  -  Remove unused variables in x300_eth_mgr.cpp
  -  Fix MAX_RATE_1GIGE value
  -  Fix sfpp_io_core tuser width
  -  Initialize struct variable before using it
* x410
  -  correct 100GbE link speed

## 004.001.000.004
* uhd
  - Update version in UHDVersion.cmake

## 004.001.000.003
* uhd
  - zbx: Prevent TX antenna config from disrupting RX

## 004.001.000.002
* b200
  -  Fix overflow handling
* fpga
  -  Re-order error and data packets
  -  Fix sc16 to sc12 converter
* host
  -  Add static_assert to prevent meta_range_t(0,0)
* mpm
  -  x4xx: update mboard_max_rev
* mpmd
  -  Add discoverable feature for trig i/o mode
* sim
  -  Update chdr_16sc_to_sc12 testbench
* tests
  -  Add recv(0) case to rx_streamer_test
* uhd
  -  transport: Avoid exceptions in disconnect_receiver()
  -  streamer: Restore original recv(0) semantics
* x4xx_bist
  -  use get_mpm_client in gpio bist

## 004.001.000.001
* cmake
  - remove redundant include
  - correctly set and unset any CMAKE_REQUIRED variables
  - fix finding PkgConfig to work robustly (without CMake warnings)
* core
  - remove boost::math in favor of std cmath
* docs
  - x4xx: Update information on CPLD updating
  - usrp_x4xx: improve filesystem update instructions
* mpm
  - zbx: Fix revision compat check
  - Update usrp_update_fs to support X410
  - max10_cpld_flash_ctrl: improve programming log
  - Skip DTS compatibility check if DTS is not being updated

## 004.001.000.000
* adf535x
  - Change freq_resolution to mod2
* b200
  - handle overruns during continuous streaming
* cal
  - ensure proper range handling
  - Remove silent capture of TypeError
  - Add X410 internal antenna names to invalid antenna list
  - add more error number for ADC overload
  - make 'calibrate all channels' default for --channels argument
  - Add support for X410
  - Add min_freq and max_freq attributes to USRPCalibratorBase
  - Fix minor issues in the calibration utilities
  - sync log output between file system and resource data
* chdr
  - Fix u64_to_host vs. u64_from_host usage
* ci
  - Add trace builds to pipeline
  - Add deb build support for ubuntu 1804/2004
  - Update docker images for Ubuntu with pbuilder
  - Support for x3xx devtest on rhombus
  - Install vc_buildtools instead of vc_community
  - Build uhd with Pipelines
  - Linux and Windows uhd build docker images
  - Hardware pytests / devtests in AzDO for n310
  - Add stub for python hardware tests
* cmake
  - Add RegMaps build component to MPM
  - fix cut-and-paste typo to fix SIM APPLE build
* convert
  - Remove unused variables
* dboard
  - magnesium: Update Rx IF Frequency Value
* dboard_iface
  - Fix sleep()
  - Modify sleep() function
* debian
  - Update supported Ubuntu releases
  - Update Python3 dependencies
* debug_dboard
  - Fix compiler warning
* deps
  - rpclib: Fix issue on socket closing
* devtest
  - benchmark_rate: Add support for rx and tx only tests
  - Make Python tests their own type of devtest
  - Lower rate for rx_all_chans_fast test
  - Allow extra device arguments when running devtests
  - Optionally generate XML report when running devtests
* docs
  - usrp_x4xx: add network leds behavior to docs
  - devices: remove child page relation to individual dboards
  - zbx: link docs to rf specifications
  - zbx: address review observations in docs
  - usrp_x4xx: address review observations in docs
  - Fix typos
  - Fix python3-ruamel.yaml name on RPM based OS
  - zbx: update cpld source code location
  - usrp_x4xx: apply minor corrections in docs
  - zbx: improve cpld update docs
  - usrp_x4xx: improve mb cpld update docs
  - Fix missing section header in power level controls page
  - Fix typo in mender section
  - Add N320 frontend correction section
  - Use Mathjax for equation rendering
  - Remove reference to Python six
  - mpm: correct ? notation to display help
  - Update Python3 dependencies
  - Fix sensor names for N3xx boards
* duc
  - Fix incorrect DDS_GAIN
* examples
  - Fix underrun/seq error reporting in benchmark_rate.py
  - Add min dynamic range limit to ascii art DFT example
  - Add IP to OOT RFNoC gain example
  - Remove unused arguments for rfnoc_radio_loopback
  - Fix PPS option in rfnoc_radio_loopback
  - Fix --random option in benchmark_rate
  - Fix icores example to match current RFNoC specs
* experts
  - Change coercion policy for regular prop nodes
* fpga
  - x400: Fix x4xx_qsfp_wrapper testbench
  - sim: Check for empty packet in clear_unused_bytes
  - Update testbenches to work in ModelSim
  - x400: Add makefiles for RF testbenches
  - tools: Detect assertions in ModelSim simulation
  - tools: Put SIM_SRCS at end of compile order
  - tools: Support new FPGA types in viv_simulator.mak
  - tools: Fix python2 reference in viv_ip_builder.mak
  - tools: Add modelsim.excludes
  - tools: Add modelsim.ini to ModelSim calls
  - tools: Add features to run_testbenches.py
  - tools: Add ip target to simulation makefiles
  - tools: Add X410 support for image packaging
  - ci: Add build definitions for FPGA CI
  - x400: zbx: Add support for ZBX CPLD
  - x400: cpld: Add support for X410 motherboard CPLD
  - x400: Add support for X410 motherboard FPGA
  - sim: Add slave_idle() to PkgAxiStreamBfm.sv
  - lib: Update register comments in eth_regs.vh
  - Update rfnoc_image_core for all targets
  - Update recommended HDL header guideline
  - tools: Fix part selection in setupenv
  - Change RFNoC YAML version numbers to strings
  - lib: Add modports to SV AXI-Stream blocks
  - lib: Add time_increment port to timekeeper
  - lib: Pipeline ctrlport_timer
  - lib: Add clock domain comments to interfaces
  - lib: Add 2 to 1 gearbox module
  - lib: Add PHASE parameter to sim_clk_gen
  - lib: Add AXI4 (full) interface
  - lib: add pause support to ethernet xport
  - lib: Add eth_ipv4_internal
  - lib: Add zynquplus family to axi_bitq
  - tools: Add ability to run commands before route
  - tools: Add ability to patch IP during generation
  - tools: Add support for RFSoC
  - lib: Minor cleanup of axi_lite.vh
  - rfnoc: Add ability to disable output flow control
  - lib: Add rx_front_end_gen3 testbench
  - lib: Update round_sd to eliminate X from simulation
  - lib: Fix simulation of axi_fir_filter
  - docs: Improve documentation of rx_frontend_gen3
  - lib: Fix DDS_SIN_COS_LUT outputs in makefile
  - dsp: Fix formatting of rx_dcoffset and add docs
  - Remove Python2 support from build system
  - e320: Improve timing on LVDS interface
  - lib: add glitch free mux module
  - e31x: Add OOT sources to Makefile.e31x.inc
  - lib: Fix axis_strm_monitor parameters
  - lib: Fix small packets stuck in 10 GbE TX
  - lib: Fix 10 GbE cut-through mode
  - lib: add generic to disable bitq engine tri-stating
* graph
  - Restore default resolver callback at node removal
  - Serialize all graph-related functions
  - Re-fetch dst_node descriptor after src_node potential removal
* host
  - utils: Print block ID for RFNoC dboards
  - Update code base using clang-tidy
  - Update code base using clang-tidy
* ic_reg_map
  - Allow registers to be arrays
  - Remove SPCC core reg map
  - Add SPCC reg map
  - Add common regmap template for Python
* images
  - Update manifest
  - Add X410 series FPGA images
  - Update manifest
  - Update B2xx firmware
* installers
  - Refactor deb script and build
  - Resolve ubuntu linter issue
* lib
  - deps: Upgrade vendor version of Pybind11 to 2.6.1
  - Fix misssing include in e3xx_radio_control_impl
  - rpc: Add virtual dtor to RPC iface base class
  - Remove move-on-return for chdr_packet_writer
  - Fix unresolved cleanup conflict (sorry!)
  - deps: Ignore more warnings in our versions of rpclib, pybind11
  - Use const-ref in for loops instead of const-copy
  - Add some virtual dtors
  - Fix warnings related to unnecessary lambda captures
  - lmx2592: Comment out some unused constants
  - Remove unused constants
  - Fix missing includes in rpc.hpp
  - Disable non pcie types in find with resource
  - graph_utils: Error on single SEP edge
  - graph_utils: Fix formatting and compiler warnings
* lmx2572
  - Fix compiler warning
* mg
  - Fix slot_idx reference
  - Remove unused private attribute from ad9371_iface
* mpm
  - Move cal freeze defaults to x4xx
  - Restore rfdc nco frequency after setting sync source
  - tests: Add lib/ to library load path
  - install cpld update scripts in runtime dir
  - x4xx_bist: run spi_flash tests on both DBs
  - max10_cpld_flash_ctrl: only reprogram cpld if necessary
  - Add chip driver for LMK05318 PLL
  - gpsd_iface: Make GPGGA generation more robust
  - sys_utils: add libgpiod-based Gpio helper
  - Remove helper classes from RPC API
  - systemd: Add UseDomains=true to eth0.network
  - Fix MD5 hashing of opkg status
  - check-filesystem: liberalize version check
  - Add unit tests for EEPROM readers
  - Add symbol name based EEPROM read, cleanup EEPROM handling
  - Add tlv_eeprom
  - gpsd_iface: Refactor class
  - Remove unnecessary imports
  - Add FPGA type to the info returned during discovery
  - Remove unused argument info
  - lmk04832: Clean up driver
  - PeriphManagerBase: Add _add_public_methods()
  - Fix minor log formatting issue
  - db_flash: Check mount status before mounting
  - sysutils: mount: Check both mount point and data path
  - mount: Demote already-mounted warning
  - periph_mgr: Demote "no SPI nodes" warning
  - mg: periphs: Read lowband lo lock status from cpld
  - Remove references to rfnoc_num_blocks
  - Remove logging for mmap_regs_iface
  - periph manager: Fix get_mb_eeprom() return value formatting
  - rpc: don't expose reset_mgr call via RPC
  - Add i2c_dev lookup using sys_name
  - rpc: Use contextmanager for claim timeouts
  - add helper for symbol lookup
  - Implement 32 bit register interface with SPI
  - Add DboardIface for MB DB driver control
  - Add an LMK03328 base chip driver
  - Add an LMK04832 base chip driver
  - prevent dead lock in timer kill during unclaim
  - Add support to safely reset peripheral manager from uhd
  - Create Mock classes for unit testing
  - Deduplicate dboard eeprom handling
  - Added DBFlash class
  - Added Mount class
  - systemd: create udev rules files for each MPM_DEVICE
  - filesystem_status: tolerate absence of mender
  - Implement get_sync_source and get_sync_sources.
  - rpc server: Fix unclaim sequence
  - rpc server: Remove Python2 compat code
  - rpc_server: fix get_log_buf for MPM Shell
  - Fix issue with check-filesystem test execution
  - Add dependency on pyusrp_periphs to MPM
  - Cleanup rpc_server.py
  - Use filesystem_status from sys_utils
  - Added check-filesystem utility
  - Add 'XQ' image as valid when using sfp0 as time_source
* mpmd
  - Support four links
  - Skip find if "resource" key is specified
  - Add support to delay and trigger fpga/dts load after update
  - Export RPC token and mb_args to the property tree
  - Reduce max frame size for 10 GbE
* msgpack/predef
  - Add riscV support
* multi_usrp
  - Factor out make_overall_tune_range() and fix limits
  - Fix typos in streamer destruction callback
  - Fix streamer destruction callback
  - Add get_mb_controller() API call
  - Relax LO set API strictness
* multi_usrp_rfnoc
  - Fix get_device()->get_tree()
  - Serialize make_rfnoc_device
* n310
  - Fix calculation of LO freq w/ext LO for RX
* n310/n300
  - Allow gain coercion
* n320
  - Add correction APIs to radio_control object
  - Fix calibrations
  - Fix IQ mapping and frontend corrections
  - Fix available antennas
  - Fix address for RX frontend control
* package
  - Fix Python components
* python
  - Add graceful exit of claim loop on SIGTERM
  - Add rfnoc_image_core.vh generation
  - Update RFNoC image builder to use CHDR_W parameter
  - Add find() to the Python API
  - multi_usrp: Add get_mpm_client() API call
  - Add mpmtools module
  - Make TuneRequest implicitly convertible from double
  - multi_usrp: Let get_tree() return a raw pointer
  - Improve access to device_addr_t
  - multi_usrp: Fix get_radio_control()
  - Clean up image builder generated code
  - Add access to the property_tree from Python
  - Move multi_usrp_python to its own module
* rfnoc
  - Fix post action behavior of nodes
  - Add image_core_name option to rfnoc_image_builder
  - Fix MTU prop resolver refactoring
  - noc_block_base: Throw if set_mtu_forwarding_policy() called multiply
  - noc_block_base: Refactor MTU prop resolver
  - Fix graph connect timeout error
  - Add option to disable flow control on rx streaming
  - radio: Add getter for SPC value
  - tx_streamer: Remove EOV size attribute
  - Update radio to support multiple SPC
  - Make NIPC match CHDR width by default for NSS block
  - Add accessors for item width and nipc for NSS
  - Fix remote stream buffer format
  - Fix time conversion in ctrlport_endpoint sleep method
  - Handle receive of 0 samples
  - Demoted zero sample error to warning
  - Add Makefile.srcs to switchboard.yml
  - Fix thread unsafe accesses in ctrlport
  - Alphabetize sections in CMakeLists.txt
  - Add add'l header files to CMakeLists.txt
* rh
  - Remove unused constant
  - cpld control: Comment out gain table address
  - Remove use of magic number of identify duration
* rpclib
  - Fix warning on ARM build
* sim
  - Fix CHDR header stringification
  - Ignore mender artifact file on sim devices
  - Check for unit test prereqs and disable if unsatisfied
  - Move SelectableQueue and SendWrapper
  - Support Out of Tree Sources and Sinks
  - Implement Sim > UHD Flow Control
  - Move Hardware Specific to Config File
  - Implement UHD > Simulator Flow Control
  - Support Timed Streams
  - Integrate simulator into UHD
  - Support Configuration Files
  - Support Streaming
  - Clarify Naming of Streams
  - Simulator CHDR Parsing and RFNoC Graph
  - Embed MPM into libpyuhd
  - Add Daughterboard Methods
  - Lay Groundwork for Simulator
* test
  - Add DPDK option for max streaming rate tests
* tests
  - Make python_api_test.py always explicitly call Python
  - Add MTU forwarding policy restriction unit test
  - Update multi_usrp_test.py
  - Update device identifiers for N310
  - Fix warnings for rf_control_gain_profile_test
  - Remove unused constants
  - Add lib/ to LD_LIBRARY_PATH for pytests
  - Add UT for node removal prop resol'n restoration
  - mock_block: Allow mock blocks to carry MB controllers
* tlv_eeprom
  - Add eeprom-set-autoboot helper script
* tools
  - Add bool-property-set ability to rx_settling_time.py
  - Rfnoc dissectors are now built and named based on CHDR width
  - Update rfnoc dissector to support multiple CHDR widths.
* transport
  - Fix compiler warning in nirio_link
  - Set mtu to 9000 for all 10GbE use cases
* twinrx
  - Remove frontend filter
  - Fix missing default copy ctor
  - Fix LO lock failure
  - Spur cleanup
* types
  - Add mm_iface structs
* uhd
  - Use chain's block channel to get power ref keys
  - Add missing channel parameter when reading power ref keys
  - Add callback for setting sync_sources
  - Update version
  - x400: Honor ENABLE_X400 component flag
  - ci: Add test definition for UHD CI
  - Add support for the USRP X410
  - Reword log.hpp documentation
  - Remove references to device3
  - Update all headers for setters on multi_usrp re coerce/throw
  - Fix typo in has_tx_power_reference
  - Enable vcpkg support on windows
  - Fix radio_control-related method constness
  - gitignore .DS_Store for our macOS friends
  - Lambda capture the node instead of vert desc
  - Check for overflow after timeout buff read
  - Split radio_control into rf_control interfaces
  - Revert "Check property type at access..."
  - clang: Fix fallthrough attribute
  - Throw error if edge list is empty
  - clang-format device impl
  - Replace default initializers with named ones
* uhd_image_loader
  - Consume .lvbitx files
* uhd_images_downloader
  - Add environment variable for http auth
  - Remove unused default_no parameter
* usrp
  - Remove old header file declarations
* usrp2
  - Use explicit template type for std::min<T>
  - Replace boost::math::iround/math::sign with std::lround
  - Apply minor cleanups to Boost usage in usrp2
  - Fix Boost headers
* usrprio
  - catch exceptions if rpc data read fails
* utils
  - Improve cal TX threads
  - Remove unused constant from b2xx_fx3_utils
  - check config file before finding devices for image loader
  - Fix GUI argument in rfnoc_image_builder
  - Improve NMEA string output
  - Set rfnoc_create_verilog.py as executable
* x300
  - Reduce phase noise for 184.32 MHz MCR
* x3xx
  - Improve image loader
* x400
  - sim: Move testbenches to sim folder
* zbx
  - Fix clang compiler warnings
  - Fix compilation on clang-10

## 004.000.000.000
* b200:
  - Add unload-bootloader option to b2xx_fx3_utils
  - Update FX3 SDK for bootloader and firmware
  - Fix address for serial number in firmware
  - Enable power calibration API
  - Add a prop tree node usb_version
* cal:
  - Add utility to update all .fbs files, or check the generated ones
  - Add pwr_cal container
* cmake:
  - Use relative path to Python lib location for Windows installer
  - Add ability to pass CXXFLAGS to CMake environment
* docs:
  - Add new CHDR format to transports
  - Update register maps
  - Update FPGA manual
  - Update mender commands for Zeus filesystems
  - Add section about network mode on E3xx devices
  - Add DPDK link detection section
  - Add Windows-specific UHD Python module notes
  - Add note about compiling on Ubuntu 20.04
  - Update PCIe xport instructions for NI Repos
  - n3xx: Include WX in table of N320 images
  - Add stream and transport args documentation
  - Update Basic/LF dboard references to use new operating mode
  - e3xx/n3xx: Add sections on FP-GPIOs and how to drive them
  - n3xx: Document eeprom flags
  - Add note about DPDK needing to be built as shared libraries
  - Change DPDK version to 18.11 and make args use underscores
  - Clarifying which devices support DPDK
* dpdk:
  - Improve link status detection
  - Increase default num recv frames
  - Add new DPDK stack to integrate with I/O services
* e31x:
  - Add retry to loopback_self_test
  - Change RFNoC Ctrl clock to 40 MHz
  - Fix timeout for timekeeper registers
  - Fix filter bank and antenna switching for channel 0
  - Swap out liberio for internal Ethernet
* e320:
  - Fix timeout for timekeeper registers
  - Swap out liberio for internal Ethernet
* examples:
  - Fix install paths in OOT RFNoC block example
  - Add usrp_power_meter example
  - Update test_messages example
  - Update gpio example
  - Add options to benchmark_rate
  - Add example out-of-tree module for RFNoC modules
  - Remove thread priority elevation
* fpga:
  - Added AA image mappings to N320 image package
  - Add Replay Block to RFNoC Core Image
  - Update DRAM IO signatures
  - sim: chdr_stream_endpoint_tb improvements
  - sim: Fix stream command and status models
  - Update AXI interconnect address range for n3xx and e320
  - rfnoc: Update CHDR stream INIT command
  - Update coding guidelines
  - Replaced RFNoC architecture with new 4.0 version
  - Added modelsim make simulation target
  - Upgrade to Vivade 2019.1
  - Removed unused coregen files and modules
  - Removed fpga submodule and merged into uhd repo
  - lib: Change max FFT size to 1024
  - lib: add Intel MAX10 architecture for 2clk FIFO
  - rfnoc: Port RFNoC Keep One in N block to new RFNoC architecture
  - rfnoc: Port RFNoC Replay block to new RFNoC architecture
  - rfnoc: Port Signal Generator RFNoC block to new RFNoC architecture
  - Add Switchboard RFNoC block
  - Remove liberio
  - rfnoc: Port RFNoC Moving Average block to new RFNoC architecture
  - rfnoc: Port Log-Power block to new RFNoC architecture
  - rfnoc: Port RFNoC Window block to new RFNoC architecture
  - lib: Add synthesizable AXI4-Stream SV components
  - lib: Add interface and model for AXI4-Lite
  - rfnoc: Add support for 512-bit CHDR widths
  - rfnoc: Port RFNoC Add/Sub block to new RFNoC architecture
  - rfnoc: Port Vector IIR RFNoC block to new RFNoC architecture
  - lib: Add AXI-Stream splitter (axis_split)
* lib:
  - Remove recursive locks in apply_corrections
  - Add power cal manager
  - deps: Add FlatBuffers 1.11.0 header files
  - Add DPDK service queue
* mpm:
  - e31x: Accept FF terminated strings in eeprom (legacy support)
  - Return 10 Gbs link speed on failure
  - Exclude internal NIC for network hosts
  - Add ability to run scripts to MPM shell
  - n3xx: Remove eth1, eth2 from interface list
  - Default virtual NIC CHDR IP selection
  - Enable internal NIC on the N3xx
  - Clean up code, improve Pylint score
  - Move common mboard regs code to common location
* mpmd:
  - Remove liberio
* multi_usrp:
  - Fix connect/disconnect of RFNoC chains
  - Various multi_usrp_rfnoc fixes
* n310:
  - Add Replay Block to default FGPA images
  - Fix GPIO registers
* n320:
  - Add Replay Block to default FGPA images
  - Double radio ingress buffer size
  - Enable inverse sinc filter for DAC37J82
* n3xx:
  - Fix timeout for timekeeper registers
  - Swap out liberio for internal Ethernet
* python:
  - Add peek/poke bindings to noc_block_base
  - Add Keep One in N block controller bindings
  - Add replay RFNoC block controller bindings
  - Add siggen RFNoC block controller bindings
  - Add Switchboard block python bindings
  - Add moving average RFNoC block controller bindings
  - Add bindings for C++ CHDR Parser
  - Add window RFNoC block controller bindings
  - Add FFT RFNoC block controller bindings
  - Add null RFNoC block controller bindings
  - Add vector IIR RFNoC block controller bindings
  - Add radio RFNoC block controller bindings
  - Add FIR filter RFNoC block controller bindings
  - Add Fosphor RFNoC block controller bindings
  - Add DUC RFNoC block controller bindings
  - Add DDC RFNoC block controller bindings
  - Added new RFNoC image builder module under the uhd module
  - Remove Python2-specific code
  - Included complex.h to allow pybind to convert that data type
* rfnoc:
  - replay: Update packet size on mtu update
  - Set null source/sink block initial state
  - Add support for 32-bit memory address widths to Replay block
  - Enable SEPs with connect_through_blocks
  - Exit disconnect() early if nodes not in node map
  - Add multichannel register interface
  - Added support for destruction of streamers
  - Add Keep One in N block support
  - Port siggen RFNoC block controller support to new RFNoC architecture
  - Add Switchboard block support
  - Port Moving Average block controller to new RFNoC architecture
  - Port Log Power RFNoC block support to new RFNoC architecture
  - Port window RFNoC block controller to new RFNoC architecture
  - Port Add/Sub RFNoC block support to new RFNoC architecture
  - Add USE_MAP prop/action forwarding policy
  - Port Split Stream RFNoC block to new RFNoC architecture
  - Port Vector IIR RFNoC block support to new RFNoC architecture
  - Port RFNoC fosphor block to new RFNoC architecture
  - Port FIR filter RFNoC block controller to new RFNoC architecture
  - Add multichannel register interface
  - Add RFNoC Python API
  - Unify endianness of transports
  - Add DMA FIFO block controller
  - examples: Port examples to new RFNoC
  - Implement flushing on overrun
  - client_zero can track num SEPs and num ctrl EPs separately
  - Add basic round-robin allocation for links
  - Add ability to select transport for streamers to user APIs
  - Use link_stream_manager's mgmt_portal for all mgmt packets
  - graph: Optimize property propagation algorithm
  - Port DUC block controller to new RFNoC architecture
  - Add MTU tracking
  - Implement overrun handling using action API
  - Port null block controller to new RFNoC architecture
  - Add mb_controller API
  - Port radio block controller to new RFNoC architecture
  - Port default block controller to new RFNoC architecture
  - Port DDC block controller to new RFNoC architecture
  - Add rfnoc_graph class
  - Add action API
  - Refactored CHDR packet interfaces
  - Add noc_block_base class
* tests:
  - Fix build issue with Boost 1.67
  - Add unit tests for new RFNoC block controllers
  - Fix multi_usrp_test
  - Add unit tests for pwr_cal_mgr
  - Migrated rfnoc block tests to dedicated subdirectory
  - Add more tests for max rate streaming
  - Add tests to exercise max streaming rates and report results
* tools:
  - Update dissectors for Wireshark major version 3, new CHDR
  - Update FPGA functional verification tests for X3x0 mcr's & dpdk
* transport:
  - Implement eov indications for Rx and Tx streams
  - Implement an I/O service that uses an offload thread
  - Implement a single-threaded I/O service
* twinrx:
  - Bypass adf535x feedback divider
  - Update synthesizer register values for improved rf performance
  - Fix increased noise floor
  - Remove decimation from frontend
* uhd:
  - Disable optimizations for Mac for build speed
  - remove liberio
  - improved handling of empty serial number hints
  - Add discoverable_features API
  - Add reference power level API to multi_usrp and radio_control
  - Add fuzzy serial number checking
  - paths: Harmonize around XDG Base Directory specification
  - cal: Use usrp::cal::database instead of CSV files
  - cal: Add iq_cal calibration data container class
  - cal: Add calibration container class
  - cal: Add database class
  - Introduce I/O service manager
  - Replace usage of boost smart pointers with C++11 counterparts
  - add udp boost asio implementation of transport interface
  - Add thread affinity utility functions
  - types: Extend stream_cmd_t::num_samps to 64 bits
* utils:
  - Expose CHDR Parsing API
  - Expose CHDR Types in Public API
  - Support expressions for num_ports in block defs
  - Let uhd_images_downloader also use HTTPS proxies
  - Fix FPGA search in rfnoc_image_builder from fpga-src to fpga
  - Add convert_cal_data utility
  - image_builder: Support parameterized number of ports on blocks
* x300:
  - Add Replay Block to default FGPA images
  - Update frame sizes for 10GbE
  - Fix for incorrect PCIe buffer size values
  - Change default dboard clock rate from 50 to 100 MHz
  - Update maximum bitstream size
  - Enable power reference API
  - Expand DRAM address space to 1G
  - Add front-panel GPIO source control

## 003.015.000.000
* N320: Fix MCR initialization, fix checks for LO distribution board,
  reset RX IQ balance on init, replace DRAM FIFO with replay block,
  improve constraints, fix I/Q imbalance compensation
* N310: increase default dc offset averaging window, make tunes
  asynchronous, add capability to control RF filter bypass and freq.band
  limits, fix setting user DB EEPROM, correctly report N321 vs N320,
  improve DDR3 BIST, update max revision to 7, fix DMA arbitration to
  use contiguous packets, replace DRAM FIFO with replay block, fix SFP
  link up status, add workaround for clocking interference with external
  reference clocks, disable gpsdo clock/time source options when
  enable_gps=0
* X310: Fix max bitfile size, fix GPIO ATR property access type, heavily
  refactor, introduce conn_mgr, add DPDK support, add
  capability to flash NI-2974 FPGA, fix clocking code, enable 11.52 MHz
  and 23.04 MHz system ref rates, improve usage of constrained device
  args, enable ADC gain through RFNoC API, add mode to set master clock
  rate to arbitrary values between 184.32 and 200 MHz, fix get_tx_gain()
  to make RX/TX gain functions symmetric
* E320: Fix time source clobbering ref source, add support for RevE, fix
  reporting of FPGA version hash, fix SFP link up status, fix missing
  ce_clk driver
* E310: Convert to MPM architecture, fix uhd_image_loader usage, fix DMA
  arbitration to use contiguous packets, reduced DMA chans to 4 (using
  data stream muxing), fix DRAM_TEST target build
* B200: Add command to query bootloader status, fix sc12 streaming, fix
  FIFO sizes on GPIFII interface
* UBX: add temperature compensation mode
* SBX: Only update ATRs when lock state changes
* TwinRX: add LO charge pump properties, increase default charge pump
  value on LO1, add low spur tuning mode, fix duplicate write to N value
  in DDC, add TwinRX support to phase alignment script
* RFNoC/device3: Read command FIFO size from device instead of
  hardcoding values, fix multidevice graph connections, ENABLE_RFNOC now
  defaults to ON, search all nodes for tick rate, add update_graph()
  call which lets blocks do a graph-wide update of properties, fix
  missing port arg in SR_WRITE Noc-Script call, constrain
  send/recv_frame_size baed on MTU, fix flushing on init/deinit, disable
  FC ACKs for lossless links
* RFNOC/FPGA: Fix rb_stb in split stream block, fix off-by-one error in
  the window block, fix phase reset and -accumulator for DDC and DUC
  blocks, fix flushing on split-stream block, fix DC offset issue with
  DDS by using proper rounding, fix DUC/DDC sample rate switching by
  latching N on M in axi_rate_change, various fixes to
  uhd_image_builder, fix MTU settings in blocks, align byte count to
  8-byte word
* Python API: Replace Boost.Python with PyBind11, fix benchmark_rate
  statistics, fix phase alignment test script
* UHD: Allow ignoring fallthrough warnings, reduce Boost footprint,
  remove gpsd dependency, improve streaming, reduced the number of
  compiler warnings, introduce pop() to the prop tree
* MPM/mpmd: Introduce compatible rev numbers to support future hardware,
  fix some resource leaks in mpmd, fix spurious reclaims causing
  unnecessary warnings, fix resource leaks in liberio xport, allow to
  mux data streams over liberio transports (e.g. to require fewer DMA
  channels on E310), wait for DPDK links to come up before proceeding,
  relax failure handling when updating components (fixes spurious errors
  when updating FPGA images over SFP), fix issue where RPC
  initialization would hang on failure, fixed cmake macros for enabling
  modules
* FPGA: Use new device-tree overlay syntax, upgraded to Vivado 2018.3,
  broke various paths with critical timing, allow SystemVerilog source
  files, improve viv_modify_bd and viv_modify_tcl_bd, fix resets on 2clk
  FIFOs
* USB: Allow cancelled USB requests to occur
* Logging: Always honour log level, don't log colours for non-ttys, fix
  includes, demote various log messages, fix logging colours, fix
  deadlock on Windows machines
* Examples: Fix benchmark_rate INIT_DELAY, fix memory leak in
  tx_samples_c, fix replay example for replay_chan > 1, improve
  benchmark_rate output to not interleave
* Tests: Make the Python interpreter for devtests a parameter, add unit
  tests to MPM
* Utilities: Fix converter benchmark for Py3k and scaling issue, use
  runtime library path lookup instead of hardcoded paths, improvements
  to images downloader (support UHD_IMAGES_URL; check conditions before
  writing, use HTTPS instead of HTTP to avoid redirect)
* Tools: Fix kitchen_sink
* Docs: Various fixes, fix Doxygen warnings, fix links to KB
* C API: Add uhd_get_abi_string, uhd_get_version_string
* CMake: Make manpage compression optional, allow setting of PKG_DOC_DIR
  from the CMake commandline, add replay example, fix missing 'project',
  replace ENABLE_PYTHON3 with a simpler Python detection, clean up
  superfluous modules, improve log statements, bump dependency min
  versions, add MPM unit testing, fix missing BIGOBJ for MSVC, add our
  own UHDBoost.cmake to better find Boost across versions and systems
* Formatting: Apply clang-format to all files, break after template<>
* AD9361: Fix mask for product ID check
* Debian: Update control file to rely on Python3 versions of deps
* Octoclock: Clear OctoClock packets and initialize version/seq num
  before transmission

## 003.014.001.000
N320: Terminate the DAC when not transmitting
E320: Add support for rev E
E320: Added .gitignore for FPGA build products
X300: Add DPDK support
X300: add capability to flash NI-2974 FPGA
X300: Broke two critical timing paths in FPGA
X300: fixed udp WSA buffer size assignment issue
E310: Fix DRAM_TEST target build
B200: Add bootloader for FX3 (fix for B2xx failing to enumerate)
TwinRX: Expose charge pump current for LO2
TwinRX: Add low spur mode for LO2
TwinRX: increase rev c lo1 charge pump default value
TwinRX: Fix tick rate
Device3: Constraint send/recv_frame_size based on down/upstream MTU
Device3: Fix MTU and default frame sizes
RFNoC: Search all nodes for tick rates
RFNoC: Change default address for the reg readbacks
uhd_image_builder: Let the OOT module point to folders not named "rfnoc"
uhd_image_builder: Add --auto-inst-src
MPMD: Fix spurious reclaim call after unclaim
MPMD: Release resources on destruction
MPM: Add SW/HW compat
liberio: Release context holder on destruction of last liberio xport
transport: fixed a pre-mature buffer reset
nirio: Fix typo in nirio_zero_copy
GPSD: fix API for 'gps_read'
AD9361: Fix return values for tune and set_clock_rate
DUC/DDC: Fix phase reset and accumulation
cores: Use NSDMI consistently in ?x_dsp_core_3000.*
Logging: fix deadlock issue on Windows machines
Logging: Fix ANSI colour codes
Utils: Add X300/X310 reset utility
Docs: Improved Windows-related build instructions
Docs: Add link to README for building custom filesystems for N3xx
sim: Fixing the port number in use for connection
tools: Fix for proj creation in ip_utils for tcl-based IP
tests: Fix mock_ctrl_iface for 32-bit MSVC

## 003.014.000.000
* N320: Add support for N320 and N321
* USRP-2974: Add support for USRP-2974
* DPDK: Add DPDK-based sockets-like library (for N3xx)
* N3xx: clocking API changes for transitioning clock and time sources
* N3xx: Bump max rev to G/6
* N3xx: Improve error messages for invalid clock/time settings
* N3xx: Get RFNoC crossbar baseport from FPGA
* N3xx: init peripherals before loading FPGA (to fix SFP0 init issues)
* N3xx: Move Linux kernel to 4.15
* N3xx/E320: Prepend SDK filename with device name
* N3xx: Update max rev to 7 (H)
* N3xx: Remove DDR3 from standard BIST collection
* N3xx: BIST: Improve DDR3 BIST to check for DmaFIFO
* N3xx: BIST: Auto-load the AA image for the ddr3 BIST
* N3xx: BIST: DDR3 test only enumerates first block
* N310: Modify AD9371 reset function to keep it in reset
* N310: move init_rf_cal before JESD de/framer bringup
* N310: Fix sporadic power on failures (requires firmware update)
* E3xx: Increase spp limit for E3xx radio
* E320: bist: Fix ref_clock lock test implementation
* E320: bist: Add link_up test
* E320: Add all 5 temp sensors, fan sensor and rssi sensors per channel
* E320: Fix tx/rx atr - antenna and frequency settings
* E320: Enable devtest for E320
* E320: images: Separate images package for Aurora image
* E320: Get RFNoC crossbar baseport from FPGA
* E320: add fpga_version_hash to e320 device info
* E310: Fix initialization of antenna and frequency values
* E31x: Destruct RFNoC before loading idle image
* X300: Reduce default send_frame_size to 4000 over Ethernet
* X300: Change Ethernet buffering
* X300: Log git hash and compat number as debug message
* X300: Move defaults to their own header
* X300: Use constrained_args
* X300: Enable clock_source and time_source device args
* X300: NIRIO: Demote RPC client cancel/abort to TRACE
* X300: remove default_buff_args properties
* X300: Remove 120 MHz master_clock_rate option
* X300: Set minimum master clock rate to 184.32 MHz
* X300: Factor our PID -> MB type and MB type -> product name mapping
* X300: Remove usage of boost::bind
* X300: Fix compiler warnings related to type conversions
* X300: Fix tick and sample rate setting
* X300: Enable ADC gain through RFNoC API
* X300: Demote NIRIO rpc client start/stop log messages to DEBUG
* X300: Enable 11.52 MHz and 23.04 MHz system ref rates
* X300: Enable x300_device_args.to_string()
* X300: Catch more inconsistencies in x300_device_args
* X300: Removed invalid 200 MHz sysref rate
* X300: Change PLL CP currents in x300_clock_ctrl
* B200: Remove superfluous fake lambda
* B200: Add support for user regs
* B200: Fix compiler warnings related to type conversions
* B100: Move fifo_ctrl_excelsior to b100 subdir
* B100: Fix fifo_ctrl_excelsior not exiting
* B100: Remove all Boostisms from fifo_ctrl_excelsior
* B100: Demote some clocking-related log messages to trace
* MPM: Get list of temperatures from all thermal zones
* MPM: add link_speed xport_info
* MPM: Add __mpm_device__ as usrp_hwd module variable
* MPM: Add usrp_update_fs
* MPM: Add i2c APIs for simple transfers
* MPM: Add vector-based transfer function for i2c
* MPM: Add variable configuration support to nijesdcore
* MPM: Add eyescan utility to nijesdcore
* MPM: Add PRBS-31 testing to nijesdcore
* MPM: Add convenience function to pull i2c bus from device tree
* MPM: Open and close i2c file descriptor on every access
* MPM: Multiprocessing instead of threading for claimer loop
* MPM: Factor out user EEPROM code into own module
* MPM: Add gpgga sensor function to GPSd iface
* MPM: Add bridge mode support
* MPM: Parameterize max UDP link allocation
* MPM: xport: add commit_xport docstring
* MPM: Improve error message on double-claim
* MPMD: Parallelize broadcast-finding
* MPMD: add option to enum rfnoc blocks from args
* MPMD: add link speed to xport udp
* MPMD: Add API to set RPC timeout atomically
* MPMD: Move timeout constants to header
* MPMD: Use new RPC API with timeout
* MPMD: Increase claim_rpc call timeout
* MPMD: implement get_*x_hints
* MPMD: honor user supplied send/recv_frame_size args
* MPMD: Use 4096 bytes for frame size for liberio transport
* MPMD: Use init timeout for update_component
* MPMD: Allow reclaim failures on component updates
* MPMD: Fix typecast warning in property tree default settings
* Device: Parallelize device discovery
* Device3: Move from packet-based to byte-based flow control
* Device3: Constrain send_buff_size to input fifo size
* Device3: remove tx_hint[send_buff_size]
* Device3: Replace NULL with 0 for empty function pointers
* Device3: Remove redundant function call
* Device3: Fix flow control window and interval
* UHD: Release recv buffers earlier in rx_streamer
* UHD: Fix ADF400x driver for ref counter and charge pump mode
* UHD: Improve constrained_device_args_t
* UHD API: Add multi_usrp::get_user_settings_iface()
* UHD: Remove usage of time_t (except when required)
* UHD: add default xport params to udp_zero_copy
* UHD: Update rx_frontend_gen3.v controls for 1/4-rate mixer
* UHD API: Move definition of ALL_MBOARDS and ALL_CHANS constants to
           CPP file.
* UHD: Add traffic counter to null source sink
* UHD API: Add multi_usrp::set_sync_source() API
* UHD: Improve documentation for the UHD exception types
* UHD: Improve documentation for set_{time,clock,sync}_source
* UHD: add .clang-format file
* UHD: Add device arg to enable dual ethernet for tx
* UHD API: Add sync source to Python API
* UHD API: Add support for Tx LO control to C API
* UHD: Improve compatibility of abs() calls
* UHD: include <stdint.h> for int64_t for time_spec
* UHD: Updates to coding guidelines
* UHD: Fix MSVC warnings by changing a size_t to unsigned int or
       uint32_t
* UHD: Add potentially missing but sometimes inferred include for
       experts
* UHD: Add default xport params to udp_wsa_zero_copy
* UHD: Move device3 flow control functions to header for benchmark
       utility
* UHD: Make sure BOOST_VERSION is always available
* UHD: Make clang-format skip formatting for some data structures
* UHD: Remove vim hints in headers
* UHD/MPM: Apply clang-format to all files
* UHD: Add modified clang-format for headers
* UHD: Replace uhd::math::log2 with std::log2
* UHD: Replace boost::*::{lcm,gcd}() with portable versions
* UHD API: Change get_{tx/rx}_dc_offset_range default from ALL_CHANS
           to 0
* UHD: Revert to boost instead of std for sleep in some instances
* UHD: Replace Boost macros with custom ones for endianness
* UHD: muxed_zero_copy_if fixes
* UHD: Replace Boost lock & mutex with std variety for AD9361 code
* UHD: fix includes for boost::noncopyable
* UHD: Fix buffer size warning on UDP transport
* UHD: Remove duplicate operator=() for sid_t
* UHD: Fix conversion warning in max287x
* UHD: Fix various type-conversion compiler warnings
* RFNoC: Convert SR_READBACK_REG_FIFOSIZE to bytes
* RFNoC: Add ability to enable/disable RX timestamp
* RFNoC: add async message handler
* RFNoC: Changes to traffic counter register names
* RFNoC: Fix replay example port args
* RFNoC: Fix default SPP for replay
* RFNoC: Add halt to replay API
* RFNoC: Fix late packet errors
* RFNoC: Fix detection of outstanding acks by ctrl_iface
* RFNoC: Add some missing virtual destructors
* RFNoC: Update FIFO XML definition
* RFNoC: Prevent unnecessary FC ACK packets
* RFNoC: More graph traversal fixes
* RFNoC: Fix scaling of M and N values in DDC/DUC
* RFNoC: Fix typos in legacy_compat
* RFNoC: Limit number of control packets in flight
* RFNoC: Disable FC ACK packets for lossless links
* RFNoC: Add valid num_input_ports check to node_ctrl_base
* Utils: Add Zip test to downloader
* Utils: Factor wait_for_lo_lock() out of cal utils
* Utils: Add check for gdb_eeprom before accessing
* Utils: Deny positional options in uhd_image_loader
* Utils: Set tx gain to max for rx iq cal
* Tools: Add tool to analyze settling time of gain and freq changes
* Tools: Make the UHD source gen a plugin for the phase alignment test
* Test: Add Python API test
* Test: Integrate Python API Tester into Devtest
* Test: Add graph impl test to device3_test
* Test: Retrofit sph test to use new mock transport
* Test: Enable rx_samples_to_file in devtest for X300
* Test: Fix CMake `endif` warning for devtest
* Test: Fix compiler warning about unused timestamp
* Test: Add #include <thread> in system time test
* Test: Add benchmark of streaming code paths
* Test: replace has_key by using 'in'
* Test: Add universal_newlines to subprocess call in devtest
* Examples: add rfnoc_radio_loopback example
* Examples: Add benchmark_streamer example
* Examples: Add dual measurements to benchmark_streamer
* Examples: Clean up rfnoc_radio_loopback example
* Examples: Add keyboard controls to rx_ascii_art_dft
* Examples: Add benchmark_streamer support for multi-channel streamer
* Examples: Optimize benchmark_rate start time
* Examples: Improve formatting and comments in tx_waveforms
* Examples: Optimize tx_waveforms memory allocations
* Examples: change boost to std for time commands
* Examples: Add LO Offset to rx_samples_to_file
* Examples: update lo-offset naming in tx from file
* Examples: Add lo-offset to tx_waveforms
* Examples: Improved error message in tx_waveforms
* Examples: Move ascii_art_dft main function within include guard
* Examples: Fix boundary condition in ascii_art_dft plotting
* Docs: Fix Doxygen warnings
* Docs: Add info on how to implement user regs on B200
* Docs: Add manual page on compat numbers
* Docs: Add comments for TwinRX and MCR
* Docs: N3xx page shell formatting and bb image
* Docs: n3xx: fix Salt formatting
* Docs: Add note on manually disabling NEON extensions
* Docs: Fixed typos in N3xx image names (SD card build)
* Docs: Add notes on external reference frequencies for X300
* CMake: Bump CMake minimum version to 2.8.12
* CMake: Change SOVERSION and VERSION for the library files
* CMake: Extend list of additional Boost versions
* CMake: fix variable usage
* Cmake: remove Boost from dyn libs for tests on Apple
* Cmake: Fix MSVC options (add /bigobj)
* Cmake: Use native format for setup.py
* CPack: Fix RPM generation

## 003.013.001.000
* E320: Fix front panel GPIO readback
* E320: Fix master_clock_rate setting
* E320: Print extra ouptut for ref_clock BIST
* E320: Fix gps_locked type
* E320: Fix return value of get_fpga_type()
* N3xx: Enable setting clock and time sources at runtime
* N3xx: Add ref_clock BIST
* N3xx: Improve set_time_source() and set_clock_source()
* N3xx: Add exception for init failure
* N3xx: Remove HA, XA images packages
* N3xx: Change init() procedure to reduce configuration time
* N310: Add frequency bounds
* N310: Fix RX antenna mapping
* N310: Add log messages when re-initializing dboards
* N310: Add skip_rfic argument to reduce time of BIST
* N310: Add initialization of TX bandwidth
* E310: Fix initialization of antenna and frequency values
* E310: Type-cast fix for Boost
* X300: Improve firmware compat error message
* X300: Updated niusrprio driver
* X300: Add recovery for duplicate IP addresses in EEPROM
* X300: Prevent duplicate MAC and IP addresses from being programmed
* X300: New mode to configure master clock rate
* X300: Implement RFNoC get antenna functions
* B2xx: Fix values of MASK_GPIO_SHDN_SW and GPIO_AUX_PWR_ON in firmware
* B2xx: Revert changes to DSP core to fix scaling factor adjustment
* B2xx: Restore asynchronous reset of AD936x
        (fixes LIBUSB_TRANSFER_OVERFLOW and unexpected sid errors)
* TwinRX: enable ch1 lo amps if ch2 is using an external lo source
* TwinRX: Correctly initialize antenna mapping on X300
* TwinRX: Revise ADF5356 frac2 register calculation to prevent drifting spurs
* TwinRX: Fix initialization
* TwinRX: Tuning improvements
* TwinRX: Enable phase resync on ADF535x
* TwinRX: Make routing to LO1 and LO2 mutually exclusive
* BasicRX/LFRX: Fix real mode in rx_frontend_core_3000
* UHD: Define UHD_API as empty string when building static lib
* UHD: Changed to 'all_matching' endpoint resolution for udp_simple transport
* UHD: Add CMake flag for NEON SIMD
* UHD: Fix usb_dummy_impl compilation in MSVC
* UHD: Reconcile time_spec operators with boost concepts
* UHD: Fix rounding in ddc/duc rate calculation
* UHD: Increase MPMD RPC timeout when calling set_time_source()
* UHD: Fix RX streamer SOB and EOB handling
* UHD: Add UHD_SAFE_CALL to block_ctrl_base destructor
* UHD: Change SOVERSION to ABI string and VERSION to full UHD version
* UHD: Update cmake style to use lower case commands
* UHD: Add SOURCE_DATE_EPOCH
* UHD: Improve logic for UHD_IMAGES_DIR
* UHD: Add RUNTIME_PYTHON_EXECUTABLE
* UHD: Fix return value of get_rolloff() for filters
* UHD: Properly register devtest
* UHD: Fix log statement for Port number on RFNoC block
* UHD: Use "MATCHES" instead of "STREQUAL" for "Clang"
* UHD: Fix GPGGA string formatting for gpsd
* Device3: Set default block control response SIDs
* Device3: Fix block control flushing
* RFNoC: Improved flushing mechanism in noc_shell and dma_fifo
* RFNoC: Install missing dma_fifo_block_ctrl header
* RFNoC: Replace some [] with .at() in radio_ctrl_impl
* RFNoC: Fix graph traversal
* MPM: Add Git hash, version to device info
* MPM: Reset the RPC server upon reload
* MPM: TDC: Update PDAC BIST and flatness test to use latest APIs
* MPM: Fix handling of 0-valued dt-compat
* MPM: Fix GPSD sensor names for N3xx and E320
* MPM: Add args to update_ref_clock_freq to properly support dynamic setting
*      of clock and time references
* MPM: Fix Pylint warnings
* MPM: Identify sysfs gpios more generically
* MPM: Add lock_guard() function
* MPM: Factor E320 and N3xx BIST code into common module
* MPM: Add gpsd error handling
* MPM: Add FPGA git hash to device info
* MPMD: Increase RPC timeout during readng mb sensor
* MPMD: Improve error message for compat number mismatches
* Python API: Enable Python API on Windows
* Python API: Change .dll to .pyd for Win32
* Python API: Fixing Boost.Python initializer visibility
* Python API: Fix duration of benchmark rate
* Python API: Add missing constructors of time_spec_t
* Python API: Expose streamer timeouts
* Python API: Tighten the scope of releasing the GIL
* Python API: Add device_addr_t
* Python API: Populate the tune_result_t binding
* Utils: Many fixes and enhancements for uhd_images_downloader
* Utils: Update query_gpsdo_sensors to work on E310
* Examples: Removed some legacy code patterns from RFNoC examples
* Examples: Fix channel argument for rx_samples_to_file
* Examples: Fix benchmark_rate MIMO synchronization
* Examples: Add phase alignment example
* Examples: Fix RX antenna not being applied in txrx_loopback_to_file
* Test: Add more env vars, make Py3k compatible
* Test: Add multi_usrp_test.py to devtest
* Test: Clean up, refactor, and improve devtest
* Test: Enable rx_samples_to_file in E320 devtest and N3xx devtest
* Test: Reduce sample rate for E320 1G devtest
* Test: Add unit test for eeprom_utils
* Docs: Add clock_source and time_source to n3xx argument list and fix WR clock_source call
* Docs: Minor tweaks to the Python API manual page
* Docs: Add E320 test procedures
* Docs: Added TwinRX page
* Docs: Fix N210 MIMO Phase Alignment test command
* Docs: Add E320 information
* Docs: Improve sections on clock/time references
* Docs: Add section on X300 motherboard clocking
* Docs: Add more information on Salt for N3xx and E320
* Docs: Adjust E310 functional verification tests
* Docs: Add documentation on GIL release
* Debian: Update control files
* Images: Add N3xx CPLD file to manifest

## 003.013.000.002
* N3xx: Fix issue where changing the clock/time source could result in
        clocks becoming unlocked
* N3xx: Improve error messages for invalid clock/time settings
* N3xx: Add support for Rev G mboard
* MPM: Add function parameter to support holding AD9371 in reset
* Docs: Add section on building fs/SD images for N3xx
* Docs: Fix Doxygen warnings

## 003.013.000.001
* N3xx: Fix UIO usage in Aurora BIST
* N3xx: Fix EEPROM parsing (for upcoming hardware)
* UHD: Fix install path for Python API

## 003.013.000.000
* N3x0: Enable fast-reinit, fix power level issue, accept 0x01 PID for
        AD9371, fix concurrency issues with Liberio
* B200: Fix sc8/sc12 modes, fix frame-size related issues, fix tick rate
        coercion, fix issues on update of tick rate, fix EOB-not-seen
        issue
* E310: Move to RFNoC architecture (this disables network mode!)
* UBX: Fix phase synchronization for 184.32 MHz master clock rate,
* multi_usrp: Fix get_?x_info() API calls
* UHD: Remove more Boost usage, fix some compiler warnings, default to
       all-channels subdev specs for X3x0 and N3x0, various LMX2592
       fixes, bump minimum CMake to 2.8.2, fix logging dtor issues
* RFNoC: Merge all existing RFNoC features into master
* FPGA: Fix various testbenches, add batch testbench execution mode,
        improve uhd_image_builder and uhd_image_builder_gui, add all
        existing RFNoC features
* Add Python API
* MPM: Enable Rev2 EEPROM format, fix some rare issues when detecting
       Ethernet devices
* CMake: Allow to override UHD_GIT_BRANCH, fix Python-finding logic, add
         ENABLE_N300 target

## 003.012.000.000
* N3x0: Add White Rabbit support, add N300 support, standard BIST
        includes fan, fix issue with 1GigE, switch to 2 radio blocks
        with 2 channels each, upgrade TDC to version 2.0, fix issue in
        ARM deframer
* X300: Enable BasicRX to use A/B/AB/BA muxing setups, more consistent
        logging, fix enumeration issue with TwinRX
* USRP2/N2x0: Re-add ability to modulate in the DAC, improve ISE
              settings to better meet timing
* B205mini: Fix global reset, improve timing in b205_ref_pll
* UHD: Remove a lot of Boost usage, mostly replaced by C++11 features,
       more unit tests, fix Boost 1.67 compatibility, fix compiler
       warnings, add API to query clock rate range, fix get_usrp_?x_info
* MPM: Refactored N3xx code, moved C++ standard to 14, refactor
       Boost.Python bindings, use CMake variable MPM_DEVICE
* Logging: Allow disabling fastpath msgs at runtime
* Docs: Clarified meaning of DSP frequencies, improved manual
        section on synchronization, added some known issues to B100,
        USRP2, and USRP1, update test test procedure description
* Examples: Improved benchmark_rate (added failure thresholds, fixed
  incorrect calculation of samples on drops, fixed timeout values),
  minor fixes to txrx_loopback_to_file
* Utils: Handle U's in calibration tools, create-lvbitx.py is now Py3k
         compatible, fixed git-hash.sh
* RFNoC: DDCs/DUCs use DDSes instead of CORDIC, add DMA-based replay
         block in FPGA, add 64-bit support to axi_wrapper, add compat
         number to radio block,
* Debian: Fix rules file, fix Changelog format
* Fix license headers
* This release includes all bugfixes and features from previous
  releases, in particular, the 3.11.* release cycle
* Known issues: N310: In some rare scenarios at high rates, streaming
  can fail and even bring the FPGA into a bad state.

## 003.011.001.000
* N310: fix compiler warnings
* N310: Implement digital loopback
* N3xx: Add N3xx devtest
* X300: Properly coerce master clock rate (tick rate)
* X300: handle bad weak_ptr during pcie discovery
* X300: handle bad weak_ptr during pcie discovery
* X300: Fix check_radio_config() to fix errors when using a single dboard
        in slot A
* B200: docs: Suggest modifying recv_frame_size for more stability
* B200: Fix bandwidth warnings and ranges
* N2xx: Fix regression issue that limited tuning range
* UBX: Change antenna functions to coercers on antenna/value properties
* adf4002: Fix register programming for power down bit
* UHD: Fix config file path for some Windows builds
* UHD: Add operators == and != for uhd::dict
* UHD: Add device_addr_t constructor from map
* UHD: Fix range of gain group to skip gains with zero step
* UHD: Changes to support Boost 1.67
* UHD: Correctly set end of burst flag in RX metadata
* UHD: Reduce usage of boost::assign, boost::this_thread::sleep, and boost:bind
* UHD: Update multi_usrp::get_usrp_?x_info() for MPM devices
* UHD: Refactor static const values to fix linker errors in niusrprio
* mpm: cmake: Add git hash and version info to Python module
* mpm: Add reference counters to UIO
* mpm: Add offset to EEPROM reads
* mpm: Disable PPS out during initialization
* mpm: Update cmake to find the correct python3
* mpm: Bump maximum supported revision to 5 (Rev F)
* mpm: Fixed db slot typo in db-id
* mpm: Increased claim timeout, made a separate RPC connection for claim, and
       added asyn calls for long RPC executions
* mpm: Improve xport<->SFP mapping algorithm
* mpmd: Improved find routine to fail fast and verify correct device is
        reachable
* mpmd: Add missing virtual destructors
* rfnoc/x300: Make sure peek32() and peek64() are called with actual addresses
* rfnoc: ctrl_iface cleanup
* rfnoc radio: Improve warning for too many samples requested
* rfnoc radio: get_rx_stream resets sequence num
* examples: Increase settling time, increase buffer fill time, and fix subdevice
            selection in txrx_loopback_to_file
* examples: Improvements to benchmark_rate
* utils: downloader supports multiple RegExs
* utils: Added code to handle underruns during self calibration
* utils: Fix 30s tiemout in query_gpsdo_sensors
* logging: Improve style consistency and demote some messages
* logging: Fix UHD_LOG_FILE cmake variable
* Docs: Add Known Issues section to USRP1, B100, and USRP2/N2x0
* Docs: Hide dependencies directory from Doxygen
* Docs: Clarify subdev specs and magnesium driver usage for N300/N310
* cmake: Improve warning for missing requests
* cmake: update NSIS template
* cmake: Remove images downloader section (replaced by manifest)

## 003.011.000.001
* N300: Added driver support (includes some refactoring of N3xx
  codebase)
* MPM: Fix PyLint warnings, Fix error handling for TCA communication
  errors, Fix printout of AD9371 version
* uhd_images_downloader: Create unique archive names for images archives
  (now include git hashes in the filename)
* uhd_images_downloader: Fix SHA256 check
* utils: Add support for N3xx filesystem images to images downloader
* UHD: Minor logging fixes
* UHD: fix legacy compat to work with 2TX radio block
* X300: improve lvbitx bitstream md5 read time
* examples: Enhance benchmark_rate with more stats and timestamps for errors
* cmake: Correctly fail when an unavailable component is requested
* debian: Add UHDConfig.cmake to install list for libuhd-dev

## 003.011.000.000
* N310: Added driver
* UBX: Add support for CAL antenna for Rev E
* Added the module peripheral manager (MPM) with all subcomponents (N310
  drivers, mpm_shell, RPC server, BIST, etc.)
* UHD: Added rpclib as a internally tracked dependency
* UHD: Reduced the usage of Boost
* UHD: Updated uhd_images_downloader: Now uses more elaborate manifest to
  optimize downloads
* UHD: Introduced uhdlib internal include paths
* UHD: Add support for configuration files. USRP settings can now be set using
  a uhd.conf file in addition to device args
* UHD: Add narrow and narrow_cast
* gr-usrptest: Various bugfixes
* Updated required Vivado version to 2017.4
* Updated all license headers to use SPDX identifiers and correctly identify
  Ettus Research as part of National Instruments
* This release includes all bugfixes and features from previous releases, in
  particular, the 3.10.* release cycle

## 003.010.003.000
* X300
** Fix max rate calculation for 1 GbE
** Fix for DAC synchronization errors (unexpected FIFO depth)
** Reduced CPU usage during TX
* N230
** Properly initialize request structure before discovery
* B200
** FX3 firmware performance opitimizations
** Fixed sequence error on second TX burst
* TwinRX
** Added ADF5356 synth and Rev C support
* UBX
** Add implementation of TDD xcvr_mode and for TX PA on in TDD mode (to reduce transient on older revs)
** Add support for UBX-TDD
* C API
** Fixed dboard EEPROM revision error handling
** Make uhd_rx_streamer_last_error use SAFE_C
** Better error handling in uhd_usrp_get_[t/r]x_stream
* RFNoC
** Fix ctrl_iface to pop sequence numbers only after success
** Fix sequence number error message in ctrl_iface
** FPGA fix for sr_read() failure to ack errors
** FPGA fix for repeated sequence number for RX packets with 1 sample
** FPGA fix for axi_serializer edge case
* Docs
** Fixed B200 power LED description
** Update README application links
* UHD
** Utilize poll() instead of select() for UDP transports where possible to avoid descirptor limits
** Fix build with Boost 1.66
** Add EEPROM info to dboard_base class so daughterboard code can access all EEPROM info

## 003.010.002.000
* multi_usrp: Fixed get_normalized_tx_gain.
* E300: Fix for streamer recreation issue. Reduced minimum timeout, fixed
        potential race condition.
* X300: Fix for network discovery, will now return early when correct serial is
        found. Fixed issue with DAC sync. All async messages now go through
        single DMA channel on PCIe. Improved TX performance. Fixed page size
        acquisition for PCIe. Fixed some FW communication errors. Improved flow
        control. Removed MTU throttling. Legacy compat falls back to min spp
        for mixed transport types.
* CBX: Fixed LO LPF behaviour in 1.5-2 GHz range.
* UBX: Fixed dtor SIGABRT issue. Better error handling for various dboard clock
       rates.
* TwinRX: Added LO reimport feature.
* GPSDO: Improved detection. Improved query_gpsdo sensor.
* RFNoC: Fixed issue with DDC and DUC command tick rate.
* UHD: Fixed potential memory leak in tasks. Fixed get_normalized_tx_gain().
       Fixed default socket buffer size to honor MTU.
* Examples: Added channel param to samps to/from file. sync_to_gps exits
            instead of uncaught throw. latency_test improved output. Use
            next_pps in test_clock_synch. Added TwinRX FHSS example.
* Utils: Modified behaviour of uhd_images_downloader so it won't delete dirs
         when using -i
* Tools: Updates to CHDR dissector. Added set_time_source_out(). Fixed LO API.
* C API: Fixed some missing fields in USRP info.
* Docs: Many minor fixes. Fixed Doxygen warnings related to /* in files.
* CMake: Fixed GCC 4.4 compilation issue. Added ability to specify package
         names.

## 003.010.001.001
* Docs: The protocol for Gen-3 devices is now consistently referred to as CHDR.
* X300: Fixed EEPROM corruption bug (happened when two processes would access
  find routines on the same device at the same time). Improved initialization
  time. CE clock is now 214 MHz. Fixed channel list generation. Find routines
  now more lenient in case one devices fails (others can still be found then).
  Improve PCIe behaviour. Fix timed commands for non-TwinRX dboards. Improve
  AXI Interconnect (faster, improved build timing).
* N230: Use second_addr (like X300).
* C API: Added UHD_VERSION macro. Fixed online rate change.
* Utils: Minor fixes to uhd_images_downloader.
* Build/CMake: Fixed some Py3k build issues. Fixed many compiler warnings. Allow
  to specify package names.
* RFNoC: Fixed sampling rate mismatch error. Noc-Shell uses a non-cascaded 2-clk
  FIFO. Increase default FIFO sizes on DUC and DDC blocks.
* UBX: Force on RX driver to eliminate transient.
* Transport code: Fixed memory leak.
* FPGA repository: Merged usrp3_rfnoc and usrp3 directories again. Cleaned up
  superfluous files. Clean separation between Gen-3 and other devices in usrp3.

## 003.010.001.000
* Fixed multiple compiler warnings
* Multiple documentation fixes
* X300: RX strobe lines are always in sync on device initialization. DB EEPROM
  now properly written. ignore-cal-file no longer ignored. Fixed case where too
  large recv_frame_size settings could break things. Reduced ZPU clock speed
  (helps FPGA timing). Added area constraints for AXI interconnect. Improved
  halfband scaling in rx_frontend. Improved PCIe streaming reliability
* B2xx: Clear sequence numbers in idle state.
* RFNoC: Nodes disconnect on destruction. Fixed setting of correct bits on
  sr_error_policy. DDC does no longer clear timed commands on EOB. DUC fixed
  timed CORDIC tuning. Enable Noc-Shell response FIFOs (fixes simultaneous
  commands on multiple channels).
* UBX: Changed default performance parameters
* TwinRX: LEDs properly light up depending on channels. Fixed issue of multiple
  (redundant) writes. Simplified API steps for phase synchronization
* XCVR: Query dboard clock instead of DAC clock. Helps in X3x0s.
* GPS: Fixed message for case when no GPS is present. Fixed multiple GPS-related
  issues.
* Converters: Fixed floating point rounding error in tests.
* Utils: uhd_usrp_probe can now query vectors
* Fixed issue that prevented soft_regs working on 32-bit systems
* Tools: Merged dissectors into common directory.
* CMake: -Og is the default now for gcc-based Debug builds.

## 003.010.000.000
* Changed version string to quadruplets (Major.API.ABI.Patch)
* Minimum dependencies bumped for gcc, Boost, CMake, clang and Python.
* TwinRX: Added support. Includes LO API for multi_usrp.
* N230: Added support
* Added expert framework
* X300: Completely restructured to use RFNoC
* X300: FPGA builds include git hash, dual 10GigE receive is now supported
  (allows 2x200 Msps receive over 2x10GigE connections), DMA FIFO (over DRAM)
  now part of builds, added Aurora support
* WBX: Fixed bug that prevented LO locking with 50 MHz ref clock
* pkg-config: Added boost_system
* Utils: uhd_usrp_probe can query sensors, query_gpsdo_sensors: minor fixes,
  and cleanup
* Examples: Bugfixes in tx_waveforms, benchmark_rate measures timeouts,
* USB subsystem: Cleanups and minor bugfixes
* Added devtest infrastructure
* Converters: Added s8 and s16 data types
* Added more aggressive optimization strategies for FPGA builds
* Xilinx IP tool upgrade scripts cleaned up

## 003.009.005
* B200: Update DSPs after changing tick rate
* X300: Added option to disable ADC self test, prevent DAC from
  underrunning
* UBX: Fixed noise issues, reduced power consumption/heat, added codes for
  upcoming board revisions, force RX LNAs on (reduces rx settling time)
* WBX: Fixed rev2 and rev3 boards on X300
* Utils/Examples: Cleaned up query_gpsdo_sensors, test_dboard_coercion,
* Manual: Minor fixes and updates
* CMake: Fix lib64 detection, better platform detection, Doxygen may use shorter
  filenames
* Octoclock: GPSDO-related fixes, sequence number consistency fixes, UART
  fixes (off-by-one errors). uhd_usrp_probe will pick up an OC now,
  added Wireshark dissector for OC packets

## 003.009.004
* GPIO control: Fix address mismatch for RX and full duplex.
  This fixes full-duplex mode for most devices.
* B200: Fixed auto rate selection (can now select 61.44 Msps)
* UBX: Fix member declaration order which could cause
  segfaults for debug builds
* Manual/Docs: Numerous fixes, use dot for graphs in manual
* Utils: multiple fixes for query_gpsdo_sensors, fixed floating point
  comparison
* Windows: Include registry file in installation
* Converters: Improve NEON converters

## 003.009.003
* UBX: Fixed a phase synchronization issue on the sub-1GHz band
* USB: Fixed transport issue that crashed when multiple USB devices were
  connected on a Windows machine, more graceful handling of USB disconnects,,
  provided .cdf file for installing on Windows
* B200: Fixed memory growth/increasing tune times issue
* E300: Fixed memory leak with udev, fixed issue with autoboot value, fixes
  to button behaviour
* usrp2, usrp3: Fixed IQ imbalance and DC bias in DDC chain
* CMake: Windows registry fixes
* Fixed several compiler warnings and minor bugs
* Examples: Updated benchmark_rate for improved thread safety

## 003.009.002
* E310: Added support for Speedgrade 3
* B205mini: Added support
* E310: Fixed reference counting bug
* B210: Fixed external clock reference bug for devices using ADF4002 PLLs
* B210: Fixed codec loopback test
* OctoClock: Fixed firmware burning on Windows
* B2XX, E3XX, X3XX: Easier time-syncing features. Fixes bug where B210s would
  only run after issuing set_time_unknown_pps().
* X3XX: Fixed bug for IQ imbalance correction
* E310: DRAM testbenching
* Docs/Manual: Many updates and fixes

## 003.009.001
* B200mini: Updated udev rules, removed DCM
* B200: Better USB error messages
* Cores: Fixed CORDIC scaling issue on all devices that use
  dsp_core_3000
* X300: Fixed GPIO issue
* Examples: Added PPS source option
* Docs: Multiple manual updates

## 003.009.000
* X300: Updated DAC ctrl, FPGA toolchain is now entirely Vivado,
  improved master clock controls, added ADC self-cal capability,
  prepared for revisions 7 and 8, fixed flow control issue which
  could cause device to hang when receiving too many overruns
* B2XX: Auto clock rate setting, added PID/VID pairs to support
  all B2XX- and derivatives, added temperature sensor, improved
  DC offset and IQ imbalance correction, added AGC support,
  support for FPGPIO connector on Rev6+ boards, full clock range support,
  updated FX3 firmware (side-channel logging capabilities, updated
  tx voltage swing, better configurability), default tick rate now
  16 MHz, added B200mini support
* E3XX: Added temperature sensor, FPGA toolchain is now entirely Vivado,
  improved DC offset and IQ imbalance correction, added AGC support,
  improved FPGA capture interface robustness for RFIC, make frame
  sizes configurable, replaced GPS control code with gpsd interfacing
  capabilities
* Octoclock: Fixed bootloader + ethernet capabilities
* Compilers: Supported MSVC versions are now 2012, 2013, 2015
  (dropped 2010 support), added MinGW capabilities
* Documentation: Many minor fixes and updates, merged all the
  info from code.ettus.com
* UHD: Added sid_t, CHDR-specific transports now get their own
  (un)packer codes, fixed a lot of compiler warnings, added
  filter API (currently available for AD9361 frontend), added
  soft-register API, replaced Cheetah with Mako, full Py3k
  compliance, updated images downloader tool (now is one tool
  for all devices), CMake minimum version is now 2.8, refactored
  general AD9361 peripheral management, refactored most core
  control management, added usb_error type (used by B2xx devices),
  better exception handling at runtime, added C wrapper API,
  new dependency: python-requests
* C API: Added to UHD (wraps C++ calls in C)
* multi_usrp: Added normalized gain setters/getters, IQ imbalance
  + DC offset correction API, filter API
* Converters: Converter symbols now exported, better logging,
  removed ORC dependency, added u8 converters
* Examples: Whitespace- and other cleanup, multi-channel fixes for
  some examples
* Utils: Read more property tree types from the command line
* Tools: kitchen sink updated, added mega_fft

## 003.008.005
* E3xx: Added support for battery-based E3xx device (E312),
  get_freq() for network mode, fixed GPS time initialization bug
* AD9361-based devices: Fixed frequency readback bug
* B200: Fixed DCM issues, better loopback failure handling,
  fix erroneous warning for custom clock rates
* X3x0: Better warnings for clock reate / ref freq
* multi_usrp: Added define for GPIO capabilities (enables
  exposure in GNU Radio)
* UHD: sc16->sc16 SSE converter
* Manual: Multiple minor updates, FPGA manual improvements,
* Build System: Fixed builds on some Windows platforms, removed
  stray prints

## 003.008.004
* B200: Fixed EEPROM writing bug, updated images for B200 Rev5/6
* E300: GPS antenna power defaults to staying on, GPS time used as
  default if available
* UBX: PDF frequency fix on X300
* USRP2: Bugfix that allows latest UHD to work with USRP2
* Documentation: Many fixes for E300 section, added FPGA manual

## 003.008.003
* UBX: Fixed phase synchronization issues
  (Related changes: Change X300 daughterboard frequency, increase
   N210 FIFO depth)
* Fixed many compiler warnings
* B200: Fixed timing issues, fixed tick rate issue, stabilized
  operations at high clock rates
* X300: Improved phase alignment across devices
* CMake: Build fixes
* E300: Flow control fix

## 003.008.002
* CMake: Introducing named versions for dev branches, enable static libs,
* E300: Docs updates, compat number bump, VCTCXO updates,
  more status bits for ref locking, fixed serial number length fix,
  RSSI Sensor
* B200: RSSI sensor
* AD9361: Better handling of different interpolation rates in FIR,
  fix for gain value truncation, removed gain value offset
* UBX: Added drivers
* Manual/Docs: Numerous updates, minimum compiler versions now specified,
* Converters: Multiple fixes for sc12
* Examples: Fixes to txrx_loopback_to_file
* Path handling vastly improved, made more consistent
* Minor UHD fixes

## 003.008.001
* B2x0: Fixed PLL settings, Fixed external ref selection, serialized
  streamer setup (thread-safety)
* X3x0: Fixed flow control issue, improved DAC ctrl + init logic,
  Fixed I/Q alignment issue
* Generation-3 devices: Fixed LED registers
* UHD: Improved tuning logic for manual tunes
* Tools: Multiple kitchen sink fixes, coloured output
* Examples: Multiple bugfixes (multi-channel ops)
* Docs/Manual: Multiple fixes, E310 panel images

## 003.008.000
* Added E310 support
* B200/B210: Moved AD9361 controls from firmware to host
* Added several tools: ZPU dissector, improved CHDR dissector,
  kitchen sink, B200/B210 USB debugging utility, latency
  measurement tool.
* Reorganized firmware/ directory structure. Refactored some
  firmware.
* Removed FPGA sources, is now in own repository (submoduled).
* Cleaned up command line arguments for some tools
* Added math namespace, plus a unified float comparison infrastructure
* Fixed tuning-related bugs
* Moved manual over to Doxygen, also several manual bug fixes and
  amendments
* Added many missing virtual destructors (less build warnings)
* Added support for NI-RIO 14.0
* X300 fixes: Not found over PCIe with no eth interfaces
* CMake improvements: Now comes with own UHDConfig.cmake and example
  to build standalone UHD apps, build fixes on Apple, interoperability
  with GNU Radio
* OctoClock fixes and improvements: Ethernet initialization, external
  ref detection, stability fixes, host driver (UHD can now talk to
  OctoClock)
* Examples: Improved GPIO example, rx_samples_to_file
* Bumped minimum Boost version to 1.46

## 003.007.003
* Fixed examples
* Removed compiler warnings
* Fixed CBX LO settings (FRAC truncation)
* Fixed build issues for out-of-tree tools for some distros
* Fixed some logging strings (SBX, GPSDO)
* Improved logging (speedups, removed unnecessary cycles)
* Added output sync for DAC reference clocks on X300
* Multiple FPGA improvements, as well as upgrade of build env
* Added support for B200 vs B210 discovery

## 003.007.002
* Fixed X300 phase alignment issues
* Fixed CMake 2.6 incompatibility issues
* EEPROM burner improvements
* Properly flushing PCIe chain on device to prevent stale data.
* Adjusted bus clock rate in FPGA to improve timing.
* Fixed issue where FPGA would fail to load FPGA image over PCIe.
* Fixed incompatibility issue with USRP2 FPGA burner utility.
* Fixed issue where ZPU would report empty NMEA strings from GPSDO.
* Updated some functions to no longer use deprecated Boost calls.
* Fixed issue where libusb would declare 'connection refused'.
* Fixed Windows library package naming.
* Updated documentation.
* Fixed reversed TX / RX colors in X300 LED indicators.
* DBSRX2 now works properly with X300 / X310.
* Updated include files to build on older distros of Linux.
* Fixed issue with 'item32' type converter from GNU Radio.
* Fixed issue where channels on B210 would occasionally not be phase-aligned.
* Fixed problem causing channels on B210 to swap between runs.
* Fixed issue in N-Series devices causing scaling error @ 50 MSps.
* The B200 / B210 now generates an internal PPS if none is provided.
* Improved performance on PCIe for X300.
* B200 / B210 properly reports clock rate (issue with float comparison).
* Fixed issue with filter selection in B200 that caused loss of RX power.
* Removed ref lock check from X300 where it wasn't necessary.

## 003.007.001
* Fixed issue with TVRX2 divider calculation.
* Fixed issue using calibration utilities on B-Side daughterboard in an X3xx.
* Replaced unsafe `sscanf` call in utilities.
* Properly initializing N-Series clock, fixing short transient on device boot-up.
* Improved `--help` output for a number of utilities & examples.
* Improved READMEs for directories.
* Fixed X3xx documentation with some clarifications.
* UHD will now tell you if you have requested a sample rate higher than the transport can deliver.
* Removed work-around necessary in RIO kernel module for zero-copy in PCIe for X3xx devices.
* Fixed issue where X3xx devices would lock-up when on networks with lots of traffic.
* The B2xx FX3 and AD9361 source code is now in UHD.
* Numerous B2xx stability improvements.
* Fixed includes for older OSes (e.g., Fedora 14).
* Fixed includes for older versions of Boost.
* Fixed PPS detection in X3xx with multiple time sources.
* Fixed overflow reporting for X3xx utilities.
* Fixed MTU / frame size detection for X3xx devices.
* Fixed B2xx filter chain causing wrong sample rate in some circumstances.

## 003.007.000
* Introduced USRP X300 and X310 support!
* Releasing a CHDR Dissector for Wireshark analysis
* Improved USRP B200 and B210 stability
* Introducing Integer-N tuning for WBX, SBX, CBX daughterboards
* Introducing support for 120 MHz versions of WBX, SBX, CBX
* Lots of new documentation
* New GPIO example for USRP X300
* Fixed threading bug in USRP B2xx code causing GQRX issue
* General UHD bug fixes & improvements

## 003.006.002
* Fixed bug in timed commands example.
* Improved compatibility for older versions of Boost.
* Fixed segmentation fault issue in converter code.
* Fixed binary-stripping for ARM builds.
* B2xx: Further improvements to code and images.
* Documentation links now installed to Start Menu in Windows.
* B2xx: More robust error checking in host code.
* B2xx: Improved error reporting.
* B2xx: Increase FPGA loading speed on USB 3
* B2xx: Re-programming FPGA without cycle now supported.
* B2xx: Larger RX SPP ceiling to support 16K transfers with larger RX FIFO in new FPGA image
* Updated internal READMEs and documentation.
* N-Series: netburner now accepts relative paths with '~'
* Completely re-written UHD Images Downloader, with numerous bug fixes and new features.

## 003.006.001
* B2xx: Fixed critical bug in 003.006.000 regarding USRP B2xx operation

## 003.006.000
* Many small fixes for bugs revealed by static analysis.
* Introduced support for the USRP B200 / B210

## 003.005.003
* E110:
** Fix FPGA Makefile build typo
* UHD:
** Fixed timespec irrational rate rounding
** Multichan streamer CPU utilization

## 003.005.002
* B100:
** Fix get send buffer timeout
* E1x0:
** Changes to bus timings for S issue
* USRP1:
** Restore broken EEPROM writing

## 003.005.001
* Misc:
** Fixes to images downloader
** Fixes to C++ net burner
** Added sleep(1) to query_gpsdo_sensors
* OSX:
** Fix for socket send code newer OS versions
* Changes from 3.4.5

## 003.005.000
* B100:
** Added timed commands feature
** Incremented FPGA compat number to 11.1
** Incremented firmware compat number to 3
* E1x0:
** Added timed commands feature
** Incremented FPGA compat number to 11.1
* USRP2/N2x0:
** Alternative stream destination on TX
** Incremented FPGA compat number to 10
* N2x0:
** Implemented timed-commands feature
** Implemented fast-commands feature
* SBX/WBX
** Tune with phase sync using timed-commands
* RFX series
** Added calibration utilities support
* General:
** SSE2 conversions for sc8 RX samples
** Added multi-threading to packet converters
** Added automatic images fetcher application

## 003.004.005
* XCVR2450:
** Added XCVR2450 rev2 support
* WBX:
** Added WBX rev4 support
* Misc:
** Fix to rx_samples_to_udp byte count
** stream command enums easy on SWIG

## 003.004.004
* Gen2
** Fix RX and TX DSP scalar adjustments
* B100/E1x0
** Fixed RX ADC IQ inversion swap
** Incremented FPGA compat number to 9.4

## 003.004.003
* USRP2/N2x0:
** Net burner parser fix (windows)
* XCVR2450:
** Fix to disable automatic LO offset on TX
* N2x0:
** Deal with misc exceptions in net burner
* E1x0:
** Changes to add reliability to bus state machine
* USRP1:
** Shutoff the DAC on transmit EOB flags
** Revert 1st nyquist zone DAC calculation

## 003.004.002
* USRP2/N2x0:
** Card and net burner language fixes
** Net burner python v3 code fix
** Net burner IPv6 interface fix
* E1x0:
** Fix for FPGA timing issue with GPMC input
** Incremented FPGA compat number to 9.2
* B100:
** Fix USB wrapper/buffer release race condition
* USRP1:
** Fix DAC calculation for tune out of 1st nyquist zone
* General:
** Fix for recv packet handler time error check
** SIMD conversion routines priority over table look-up
** Fix undefined GCC float conversion behaviour for sc8

## 003.004.001
* USRP2/N2x0:
** Filter out invalid broadcast replies
** Incremented FPGA compat number to 9.1
* E1x0:
** Incremented FPGA compat number to 9.1
* B100:
** FPGA fixes for USB slave FIFO interface
** Incremented FPGA compat number to 9.3
* USRP1:
** Stop thread in deconstructor for race condition
** Fixed DBSRX + USRP1 i2c lockup condition
* Gen2:
** Fix for unintentional clear in deprecated recv() call
** Fix RX DC offset call to handle negative values
* FreeBSD:
** Fixed network relay example compilation

## 003.004.000
* USRP2/N2x0:
** 50 Msps RX/TX with sc8 mode over the wire
* B100:
** 16 Msps RX/TX with sc8 mode over the wire
* SBX/WBX:
** Added self-calibration utilities
* Gen2:
** Control RX/TX DC offset correction via API
** Control RX/TX IQ balance correction via API
** Incremented FPGA compat number to 9
* USRP1:
** Support 16Msps RX with sc8 mode over the wire
** Control RX DC offset correction via API
* Misc:
** Multiple streamers/heterogeneous rates
** Alternative host and wire data types
** Added API calls for DC offset correction
** Added API calls for IQ balance correction

## 003.003.002
* N2x0:
** Fixed TX daughterboard clocking mode
* B100:
** Tweaks for ordering of FPGA resets
* Misc:
** Device adder can parse empty values
** Updated syntax in udev rules file
** Corrections to images documentation
** Performance tweak for tx_waveforms example
** Handle EINTR on select() w/ udp transport
** Minor fixes for compiling on FreeBSD

## Release 003.003.001
* B100/E1x0:
** Fixed VCO bounds checking on flexible clocking
* B100:
** Fixed discovery throwing when device claimed

## 003.003.000
* USRP2/N2x0:
** Incremented firmware image compat number to 11.0
** Re-implement internal GPSDO UART control
* E1x0:
** New GPMC/FPGA bus implementation
** Incremented FPGA compat number to 6
** Incremented module compat number to 3
** Added support for E110
** Added support for E100r4
* B100:
** Added support for B100
* USRP1:
** Re-implement LibUSB data transport
* Misc:
** Normalise time_spec for negative fractional seconds
* Gen2:
** Fix DSP rate selection clipping for very low rates

## 003.002.004
* USRP2/N2x0:
** Resize all socket buffers (multi-channel)
* N2x0:
** Gracefully handle missing GPSDO
* USRP1:
** Fix bug with order of deconstructors
** Fix zero length send padding on commit
* XCVR2450:
** Fix LO locking at marginal frequencies
* WBX:
** Fix TX gain readback value on v3 board
* Gen2:
** Fix bounds checking on stream num samps
** Fix error using PPS_NEG in clock config

## 003.002.003
* USRP2/N2x0:
** Fix uninitialized variable for multi-board case
** Fix deconstructor throwing on device disconnect
** Incremented FPGA image compat number to 7.3
* TVRX:
** Populated sensors property (fixed error in init)
* FPGA (gen2):
** Adjust RX DC offset correction time constant
** Restore calibration path in RX/TX frontend
* Misc:
** MB EEPROM burner workaround for compiler bugs
** Clip the reported tune range to the dboard bandwidth
** Preserve bands when calculating overall tune range

## 003.002.002
* USRP2/N2x0:
** Always resize socket send buffer to SRAM size
** Incremented FPGA image compat number to 7.2
** Incremented firmware image compat number to 10.4
* N2x0:
** GPSDO control tweak for some devices
** Fix for erasure logic in rare bricking cases
* E100:
** Fix RX run state for GPIOs controlled by ATR
* USRP1:
** Fix for multi-channel streaming
** Fix to support 0 RX or 0 TX DSPs
* SBX:
** Corrected lower limit on frequency range
* FPGA (gen2):
** Reset CIC decimator on start of burst
* Misc:
** Fix send to return zero on empty packets
** Perform version check on liborc

## 003.002.001
* USRP2/N-Series:
** Firmware fix to shutoff streaming when socket unreachable
** Incremented firmware image compat number to 10.3

## 003.002.000
* USRP2/N-Series:
** Incremented FPGA image compat number to 7.1
** Incremented firmware image compat number to 10.2
** Removed mimo_mode device addr argument
** Support for rev4 N2XX motherboards
* USRP-E100:
** Removed the need for clock recovery
** Incremented FPGA image compat number to 5
** Incremented kernel module compat number to 2
** Added support for dual receive DSPs
** Async messages independent from RX path
* WBX:
** Support for rev3 daughterboards
* DBSRX2:
** Rounding fix for LO tuning error
* Packet handler:
** Overall performance improvements
** Timestamps for packet fragments
** Overflow message on dropped packets
* Conversion:
** Optional liborc conversion support
** SSE2 conversion alignment performance
** SSE2 conversion for complex doubles
* Windows:
** Performance improvements for UDP send
* Misc:
** Code reorganization with property tree
** Calibration support in gen2 FPGAs

## 003.001.002
* N-Series:
** Fix UART communication for GPSDO
* XCVR2450:
** Fix for descontructor throwing on hardware disconnect

## 003.001.001
* USRP1:
** Fixed lock up in logging facility under MSVC
* USRP2/N-Series:
** Handle exceptions thrown in device locker loop
** Connected internal GPSDO PPS signal in FPGA
* WBX
** Keep mixers on between bursts to maintain phase offsets

## 003.001.000
* USRP2/N-Series:
** Incremented FPGA compat number to 6
** Incremented firmware compat number to 10
** Created all-in-one bootloader for N-series
** Lock open devices per process
** USRP N-Series internal GPSDO Support
** Discovery works with out-of-date images
** Net and card burner: python 3.0 support
** Net burner: tkinter + windows thread fix
** Card burner: device selection validation
* USRP-E100:
** Incremented FPGA compat number to 4
** FPGA VRT packet framer correct length
** Fix auxiliary ADC read back for AD9862
** Sync TX and RX daughterbord clocks
** Fix daughterboard clock rates after re-clock event
* USRP1:
** Fix TX under remainder conditions
** Fixed RX multi-channel mapping
* Daughterboards:
** Added support for TVRX2 daughterboard
** Added support for SBX daughterboard
** Added support for WBX granddaughterboards
** Application notes for sensors and IF
* Windows:
** MinGW and Cygwin support (thanks Don)
** Fix calling convention on libusb callbacks
* Misc:
** Added logging and messaging facilities
** Deprecated API in utils/warning.hpp
** Fixed race condition in device discovery/factory

## 003.000.001
* RFX400: fix for transmit capability
* USRP1: fix for axillary ADC read
* Windows: statically link libusb
* Windows: install dll into runtime path
* Linux: automatically set LIB_SUFFIX on rh-64 systems
* USRP-E100: fix - set FPGA tick rate on re-clock event
* build: various work on build system
* build: include FPGA and firmware images in installers

## 003.000.000
Initial (formal) release, no changes to mention.
