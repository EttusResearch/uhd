//
// Copyright 2022 Ettus Research, A National Instruments Company
//
// SPDX-License-Identifier: LGPL-3.0-or-later
//
// Module: led_setup_regmap_utils.vh
// Description:
// The constants in this file are autogenerated by XmlParse.

//===============================================================================
// A numerically ordered list of registers and their HDL source files
//===============================================================================

  // LED_CONTROL : 0x0 (led_control.v)

//===============================================================================
// RegTypes
//===============================================================================

  // LED_CONTROL_TYPE Type (from led_control.v)
  localparam LED_CONTROL_TYPE_SIZE = 32;
  localparam LED_CONTROL_TYPE_MASK = 32'h70007;
  localparam CH0_RX2_LED_EN_SIZE = 1;  //LED_CONTROL_TYPE:CH0_RX2_LED_EN
  localparam CH0_RX2_LED_EN_MSB  = 0;  //LED_CONTROL_TYPE:CH0_RX2_LED_EN
  localparam CH0_RX2_LED_EN      = 0;  //LED_CONTROL_TYPE:CH0_RX2_LED_EN
  localparam CH0_TRX1_LED_EN_SIZE = 2;  //LED_CONTROL_TYPE:CH0_TRX1_LED_EN
  localparam CH0_TRX1_LED_EN_MSB  = 2;  //LED_CONTROL_TYPE:CH0_TRX1_LED_EN
  localparam CH0_TRX1_LED_EN      = 1;  //LED_CONTROL_TYPE:CH0_TRX1_LED_EN
  localparam CH1_RX2_LED_EN_SIZE =  1;  //LED_CONTROL_TYPE:CH1_RX2_LED_EN
  localparam CH1_RX2_LED_EN_MSB  = 16;  //LED_CONTROL_TYPE:CH1_RX2_LED_EN
  localparam CH1_RX2_LED_EN      = 16;  //LED_CONTROL_TYPE:CH1_RX2_LED_EN
  localparam CH1_TRX1_LED_EN_SIZE =  2;  //LED_CONTROL_TYPE:CH1_TRX1_LED_EN
  localparam CH1_TRX1_LED_EN_MSB  = 18;  //LED_CONTROL_TYPE:CH1_TRX1_LED_EN
  localparam CH1_TRX1_LED_EN      = 17;  //LED_CONTROL_TYPE:CH1_TRX1_LED_EN

//===============================================================================
// Register Group LED_SETUP_REGISTERS
//===============================================================================

  // LED_CONTROL Register (from led_control.v)
  localparam LED_CONTROL_COUNT = 256; // Number of elements in array

  // Return the offset of an element of register array LED_CONTROL
  function integer LED_CONTROL (input integer i);
    LED_CONTROL = (i * 'h4) + 'h0;
  endfunction
