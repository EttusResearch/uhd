# General parameters
# -----------------------------------------
schema: rfnoc_imagebuilder_args         # Identifier for the schema used to validate this file
copyright: >-                           # Copyright information used in file headers
  Copyright 2024 Ettus Research, a National Instruments Brand
license: >-                             # License information used in file headers
  SPDX-License-Identifier: LGPL-3.0-or-later
version: '1.0'                          # File version
chdr_width: 256                         # Default bit width to use for CHDR buses
device: 'x410'                          # USRP type
image_core_name: 'x410_uc_200_fft_ddc_duc_routes'  # Name to use for the RFNoC Image Core files
default_target: 'X410_UC_200'           # Default make target

# A list of all stream endpoints in design
# ----------------------------------------
stream_endpoints:
  ep0:                                  # Stream endpoint name
    ctrl: True                          # Endpoint passes control traffic
    data: True                          # Endpoint passes data traffic
    buff_size_bytes: 262144             # Ingress buffer size for data
  ep1:
    ctrl: False
    data: True
    buff_size_bytes: 262144
  ep2:
    ctrl: False
    data: True
    buff_size_bytes: 262144
  ep3:
    ctrl: False
    data: True
    buff_size_bytes: 262144

# A table of which crossbar routes to include
# -------------------------------------------
# Rows correspond to input ports and columns correspond to output ports.
# Entering a 1 includes and a 0 removes that route from the crossbar.
crossbar_routes:
  #  eth0  eth2  eth4  ep0   ep2
  #     eth1  eth3  dma   ep1   ep3
  - [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] # eth0 (NC)
  - [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] # eth1 (NC)
  - [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] # eth2 (NC)
  - [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] # eth3 (NC)
  - [ 0, 0, 0, 0, 1, 0, 1, 1, 1, 1 ] # eth4 (QSFP Port 1)
  - [ 0, 0, 0, 0, 0, 1, 1, 1, 1, 1 ] # dma
  - [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ] # ep0 (radio0.0)
  - [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ] # ep1 (radio0.1)
  - [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ] # ep2 (radio1.0)
  - [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ] # ep3 (radio1.1)

# A list of all NoC blocks in design
# ----------------------------------
#block_chdr_width: 64
noc_blocks:
  ofdm_u0:
    block_desc: 'ofdm.yml'
    parameters:
      NUM_PORTS: 2
      MAX_FFT_SIZE_LOG2: 14
      MAX_CP_LEN_LOG2: 14
  ofdm_d0:
    block_desc: 'ofdm.yml'
    parameters:
      NUM_PORTS: 2
      MAX_FFT_SIZE_LOG2: 14
      MAX_CP_LEN_LOG2: 14
  duc0:
    block_desc: 'duc.yml'
    parameters:
      NUM_PORTS: 2
  ddc0:
    block_desc: 'ddc.yml'
    parameters:
      NUM_PORTS: 2
  radio0:
    block_desc: 'radio.yml'
    parameters:
      NUM_PORTS: 2
      NIPC: RADIO_NIPC
    ctrl_clock: _device_.rfnoc_ctrl
    timebase_clock: _device_.radio
  ofdm_u1:
    block_desc: 'ofdm.yml'
    parameters:
      NUM_PORTS: 2
      MAX_FFT_SIZE_LOG2: 14
      MAX_CP_LEN_LOG2: 14
  ofdm_d1:
    block_desc: 'ofdm.yml'
    parameters:
      NUM_PORTS: 2
      MAX_FFT_SIZE_LOG2: 14
      MAX_CP_LEN_LOG2: 14
  duc1:
    block_desc: 'duc.yml'
    parameters:
      NUM_PORTS: 2
  ddc1:
    block_desc: 'ddc.yml'
    parameters:
      NUM_PORTS: 2
  radio1:
    block_desc: 'radio.yml'
    parameters:
      NUM_PORTS: 2
      NIPC: RADIO_NIPC
    ctrl_clock: _device_.rfnoc_ctrl
    timebase_clock: _device_.radio

# A list of all static connections in design
# ------------------------------------------
# Format: A list of connection maps (list of key-value pairs) with the following keys
#   - srcblk  = Source block to connect
#   - srcport = Port on the source block to connect
#   - dstblk  = Destination block to connect
#   - dstport = Port on the destination block to connect
connections:
  # RF A:0 TX
  - { srcblk: ep0,     srcport: out0,  dstblk: ofdm_u0, dstport: in_0 }
  - { srcblk: ofdm_u0, srcport: out_0, dstblk: duc0,    dstport: in_0 }
  - { srcblk: duc0,    srcport: out_0, dstblk: radio0,  dstport: in_0 }
  # RF A:0 RX
  - { srcblk: radio0,  srcport: out_0, dstblk: ddc0,    dstport: in_0 }
  - { srcblk: ddc0,    srcport: out_0, dstblk: ofdm_d0, dstport: in_0 }
  - { srcblk: ofdm_d0, srcport: out_0, dstblk: ep0,     dstport: in0  }
  # RF A:1 TX
  - { srcblk: ep1,     srcport: out0,  dstblk: ofdm_u0, dstport: in_1 }
  - { srcblk: ofdm_u0, srcport: out_1, dstblk: duc0,    dstport: in_1 }
  - { srcblk: duc0,    srcport: out_1, dstblk: radio0,  dstport: in_1 }
  # RF A:1 RX
  - { srcblk: radio0,  srcport: out_1, dstblk: ddc0,    dstport: in_1 }
  - { srcblk: ddc0,    srcport: out_1, dstblk: ofdm_d0, dstport: in_1 }
  - { srcblk: ofdm_d0, srcport: out_1, dstblk: ep1,     dstport: in0  }
  #
  # RF B:0 TX
  - { srcblk: ep2,     srcport: out0,  dstblk: ofdm_u1, dstport: in_0 }
  - { srcblk: ofdm_u1, srcport: out_0, dstblk: duc1,    dstport: in_0 }
  - { srcblk: duc1,    srcport: out_0, dstblk: radio1,  dstport: in_0 }
  # RF B:0 RX
  - { srcblk: radio1,  srcport: out_0, dstblk: ddc1,    dstport: in_0 }
  - { srcblk: ddc1,    srcport: out_0, dstblk: ofdm_d1, dstport: in_0 }
  - { srcblk: ofdm_d1, srcport: out_0, dstblk: ep2,     dstport: in0  }
  # RF B:1 TX
  - { srcblk: ep3,     srcport: out0,  dstblk: ofdm_u1, dstport: in_1 }
  - { srcblk: ofdm_u1, srcport: out_1, dstblk: duc1,    dstport: in_1 }
  - { srcblk: duc1,    srcport: out_1, dstblk: radio1,  dstport: in_1 }
  # RF B:1 RX
  - { srcblk: radio1,  srcport: out_1, dstblk: ddc1,    dstport: in_1 }
  - { srcblk: ddc1,    srcport: out_1, dstblk: ofdm_d1, dstport: in_1 }
  - { srcblk: ofdm_d1, srcport: out_1, dstblk: ep3,     dstport: in0  }
  #
  # BSP Connections
  - { srcblk: radio0,   srcport: ctrlport, dstblk: _device_, dstport: ctrlport_radio0 }
  - { srcblk: radio1,   srcport: ctrlport, dstblk: _device_, dstport: ctrlport_radio1 }
  - { srcblk: _device_, srcport: radio0,   dstblk: radio0,   dstport: radio           }
  - { srcblk: _device_, srcport: radio1,   dstblk: radio1,   dstport: radio           }
  - { srcblk: _device_, srcport: time,     dstblk: radio0,   dstport: time            }
  - { srcblk: _device_, srcport: time,     dstblk: radio1,   dstport: time            }

# A list of all clock domain connections in design
# ------------------------------------------------
# Format: A list of connection maps (list of key-value pairs) with the following keys
#   - srcblk  = Source block to connect (Always "_device"_)
#   - srcport = Clock domain on the source block to connect
#   - dstblk  = Destination block to connect
#   - dstport = Clock domain on the destination block to connect
clk_domains:
  - { srcblk: _device_, srcport: radio, dstblk: radio0,  dstport: radio }
  - { srcblk: _device_, srcport: radio, dstblk: radio1,  dstport: radio }
  - { srcblk: _device_, srcport: ce,    dstblk: duc0,    dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: ddc0,    dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: duc1,    dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: ddc1,    dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: ofdm_u0, dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: ofdm_d0, dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: ofdm_u1, dstport: ce    }
  - { srcblk: _device_, srcport: ce,    dstblk: ofdm_d1, dstport: ce    }
