#
# Copyright 2022 Ettus Research, a National Instruments Brand
#
# SPDX-License-Identifier: LGPL-3.0-or-later
#
# Description:
#
#   This template defines a stages-based pipeline that may be leveraged by both
#   a PR pipeline or a continuous delivery pipeline.
#
#   See https://aka.ms/yaml for pipeline YAML documentation.
#

parameters:
## Optional parameters
# Run testbenches
- name: run_testbenches
  type: boolean
  default: true
# Option to ignore cached artifacts (if available) and perform
# a clean IP build.
- name: clean_ip_build
  type: boolean
  default: false
# Number of parallel jobs to use for IP build
- name: num_ip_jobs
  type: number
  default: 5
# Option to publish intermediate files
- name: publish_int_files
  type: boolean
  default: false
# Package and publish images
- name: package_and_publish_images
  type: boolean
  default: true
# Package access in the SDR server ('Internal' or 'Public')
- name: package_access
  type: string
  default: 'Internal'
# Skip analyze changeset stage
- name: skip_analyze_changeset
  type: boolean
  default: false
# Build X3x0 FPGA targets
- name: build_x3x0
  type: boolean
  displayName: Build X3x0
  default: false
# Build N3xx FPGA targets
- name: build_n3xx
  type: boolean
  displayName: Build N3xx
  default: false
# Build E31x FPGA targets
- name: build_e31x
  type: boolean
  displayName: Build E31x
  default: false
# Build E32x FPGA targets
- name: build_e32x
  type: boolean
  displayName: Build E32x
  default: false
# Build X410 FPGA targets
- name: build_x410
  type: boolean
  default: false
# Requested X410 targets (if build_x410 is true)
- name: x410_targets_matrix
  type: object
  default:
    X410_X4_200:
      image_core: x410_200_rfnoc_image_core.yml
      target_name: X410_X4_200
      timeout: 720
      max_attempts: 2
    X410_UC_200:
      image_core: x410_200_rfnoc_image_core.yml
      target_name: X410_UC_200
      timeout: 720
      max_attempts: 2
    X410_X4_400:
      image_core: x410_400_d_rfnoc_image_core.yml
      target_name: X410_X4_400
      timeout: 720
      max_attempts: 2
    X410_CG_400:
      image_core: x410_400_rfnoc_image_core.yml
      target_name: X410_CG_400
      timeout: 720
      max_attempts: 2
# Build X440 FPGA targets
- name: build_x440
  type: boolean
  default: false
# Requested X440 targets
- name: x440_targets_matrix
  type: object
  default:
    X440_CG_1600:
      image_core: x440_1600_rfnoc_image_core.yml
      target_name: X440_CG_1600
      timeout: 720
      max_attempts: 2
    X440_CG_400:
      image_core: x440_400_rfnoc_image_core.yml
      target_name: X440_CG_400
      timeout: 720
      max_attempts: 2
    X440_X4_1600:
      image_core: x440_1600_d_rfnoc_image_core.yml
      target_name: X440_X4_1600
      timeout: 720
      max_attempts: 2
    X440_X4_400:
      image_core: x440_400_d_rfnoc_image_core.yml
      target_name: X440_X4_400
      timeout: 720
      max_attempts: 2
    X440_X4_200:
      image_core: x440_200_rfnoc_image_core.yml
      target_name: X440_X4_200
      timeout: 720
      max_attempts: 2


resources:
  repositories:
  - repository: hwtools
    type: git
    ref: main
    name: DevCentral/hwtools


stages:

### START: Testbenches stage

- stage: run_testbenches_stage
  displayName: Run Testbenches
  dependsOn: []
  condition: and(succeeded(), eq('${{ parameters.run_testbenches }}', 'true'))
  jobs:
  - template: job-run-testbenches.yml

### END: Testbenches stage


### START: Change History analysis stage
- stage: analyze_changeset
  displayName: Analyze Changeset
  dependsOn: []
  jobs:
  - template: job-analyze-changeset.yml
    parameters:
      skip_analyze_changeset: ${{ parameters.skip_analyze_changeset }}

### END: Change History analysis stage

### START: X400 stages

- template: ../devices/job-build-x400.yml
  parameters:
    clean_ip_build: ${{ parameters.clean_ip_build }}
    publish_int_files: true
    package_and_publish_images: ${{ parameters.package_and_publish_images }}
    package_access: ${{ parameters.package_access }}
    build_x410: ${{ parameters.build_x410 }}
    build_x440: ${{ parameters.build_x440 }}
    x410_requests_matrix: ${{ parameters.x410_targets_matrix }}
    x440_requests_matrix: ${{ parameters.x440_targets_matrix }}

### END: X400 stages

### START: X3x0 stages

- template: ../devices/job-build-x300.yml
  parameters:
    clean_ip_build: ${{ parameters.clean_ip_build }}
    publish_int_files: true
    package_and_publish_images: ${{ parameters.package_and_publish_images }}
    package_access: ${{ parameters.package_access }}
    build_x3x0: ${{ parameters.build_x3x0 }}

### END: X3x0 stages

### START: N3xx stages

- template: ../devices/job-build-n3xx.yml
  parameters:
    clean_ip_build: ${{ parameters.clean_ip_build }}
    publish_int_files: true
    package_and_publish_images: ${{ parameters.package_and_publish_images }}
    package_access: ${{ parameters.package_access }}
    build_n3xx: ${{ parameters.build_n3xx }}

### END: N3xx stages

### START: E31x stages

- template: ../devices/job-build-e31x.yml
  parameters:
    clean_ip_build: ${{ parameters.clean_ip_build }}
    publish_int_files: true
    package_and_publish_images: ${{ parameters.package_and_publish_images }}
    package_access: ${{ parameters.package_access }}
    build_e31x: ${{ parameters.build_e31x }}

### END: E31x stages

### START: E320 stages

- template: ../devices/job-build-e320.yml
  parameters:
    clean_ip_build: ${{ parameters.clean_ip_build }}
    publish_int_files: true
    package_and_publish_images: ${{ parameters.package_and_publish_images }}
    package_access: ${{ parameters.package_access }}
    build_e320: ${{ parameters.build_e32x }}

### END: E320 stages
